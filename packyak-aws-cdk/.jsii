{
  "author": {
    "name": "Sam Goodwin",
    "roles": [
      "author"
    ]
  },
  "bin": {
    "packyak": "./bin/packyak.mjs"
  },
  "dependencies": {
    "@aws-cdk/aws-glue-alpha": "2.126.0-alpha.0",
    "@aws-cdk/aws-lambda-python-alpha": "2.126.0-alpha.0",
    "@aws-cdk/aws-sagemaker-alpha": "2.126.0-alpha.0",
    "aws-cdk-lib": "2.126.0",
    "constructs": "^10.3.0"
  },
  "dependencyClosure": {
    "@aws-cdk/asset-awscli-v1": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.AwsCliV1",
          "packageId": "Amazon.CDK.Asset.AwsCliV1"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-awscli-go",
          "packageName": "awscliv1"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-awscli-v1",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.awscli.v1"
        },
        "js": {
          "npm": "@aws-cdk/asset-awscli-v1"
        },
        "python": {
          "distName": "aws-cdk.asset-awscli-v1",
          "module": "aws_cdk.asset_awscli_v1"
        }
      }
    },
    "@aws-cdk/asset-kubectl-v20": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.KubectlV20",
          "packageId": "Amazon.CDK.Asset.KubectlV20"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-kubectl-go",
          "packageName": "kubectlv20"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-kubectl-v20",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.kubectl.v20"
        },
        "js": {
          "npm": "@aws-cdk/asset-kubectl-v20"
        },
        "python": {
          "distName": "aws-cdk.asset-kubectl-v20",
          "module": "aws_cdk.asset_kubectl_v20"
        }
      }
    },
    "@aws-cdk/asset-node-proxy-agent-v6": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.NodeProxyAgentV6",
          "packageId": "Amazon.CDK.Asset.NodeProxyAgentV6"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-node-proxy-agent-go",
          "packageName": "nodeproxyagentv6"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-node-proxy-agent-v6",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.node.proxy.agent.v6"
        },
        "js": {
          "npm": "@aws-cdk/asset-node-proxy-agent-v6"
        },
        "python": {
          "distName": "aws-cdk.asset-node-proxy-agent-v6",
          "module": "aws_cdk.asset_node_proxy_agent_v6"
        }
      }
    },
    "@aws-cdk/aws-glue-alpha": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Glue.Alpha",
          "packageId": "Amazon.CDK.AWS.Glue.Alpha"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdkgluealpha"
        },
        "java": {
          "maven": {
            "artifactId": "glue-alpha",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.glue.alpha"
        },
        "js": {
          "npm": "@aws-cdk/aws-glue-alpha"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-glue-alpha",
          "module": "aws_cdk.aws_glue_alpha"
        }
      }
    },
    "@aws-cdk/aws-lambda-python-alpha": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda.Python.Alpha",
          "packageId": "Amazon.CDK.AWS.Lambda.Python.Alpha"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdklambdapythonalpha"
        },
        "java": {
          "maven": {
            "artifactId": "lambda-python-alpha",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda.python.alpha"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda-python-alpha"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-lambda-python-alpha",
          "module": "aws_cdk.aws_lambda_python_alpha"
        }
      }
    },
    "@aws-cdk/aws-sagemaker-alpha": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Sagemaker.Alpha",
          "packageId": "Amazon.CDK.AWS.Sagemaker.Alpha"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdksagemakeralpha"
        },
        "java": {
          "maven": {
            "artifactId": "sagemaker-alpha",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sagemaker.alpha"
        },
        "js": {
          "npm": "@aws-cdk/aws-sagemaker-alpha"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-sagemaker-alpha",
          "module": "aws_cdk.aws_sagemaker_alpha"
        }
      }
    },
    "aws-cdk-lib": {
      "submodules": {
        "aws-cdk-lib.alexa_ask": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Alexa.Ask"
            },
            "java": {
              "package": "software.amazon.awscdk.alexa.ask"
            },
            "python": {
              "module": "aws_cdk.alexa_ask"
            }
          }
        },
        "aws-cdk-lib.assertions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assertions"
            },
            "java": {
              "package": "software.amazon.awscdk.assertions"
            },
            "python": {
              "module": "aws_cdk.assertions"
            }
          }
        },
        "aws-cdk-lib.assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.assets"
            },
            "python": {
              "module": "aws_cdk.assets"
            }
          }
        },
        "aws-cdk-lib.aws_accessanalyzer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AccessAnalyzer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.accessanalyzer"
            },
            "python": {
              "module": "aws_cdk.aws_accessanalyzer"
            }
          }
        },
        "aws-cdk-lib.aws_acmpca": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ACMPCA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.acmpca"
            },
            "python": {
              "module": "aws_cdk.aws_acmpca"
            }
          }
        },
        "aws-cdk-lib.aws_amazonmq": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmazonMQ"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amazonmq"
            },
            "python": {
              "module": "aws_cdk.aws_amazonmq"
            }
          }
        },
        "aws-cdk-lib.aws_amplify": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Amplify"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplify"
            },
            "python": {
              "module": "aws_cdk.aws_amplify"
            }
          }
        },
        "aws-cdk-lib.aws_amplifyuibuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmplifyUIBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplifyuibuilder"
            },
            "python": {
              "module": "aws_cdk.aws_amplifyuibuilder"
            }
          }
        },
        "aws-cdk-lib.aws_apigateway": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APIGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigateway"
            },
            "python": {
              "module": "aws_cdk.aws_apigateway"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Apigatewayv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigatewayv2"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2_authorizers": {},
        "aws-cdk-lib.aws_apigatewayv2_integrations": {},
        "aws-cdk-lib.aws_appconfig": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppConfig"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appconfig"
            },
            "python": {
              "module": "aws_cdk.aws_appconfig"
            }
          }
        },
        "aws-cdk-lib.aws_appflow": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppFlow"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appflow"
            },
            "python": {
              "module": "aws_cdk.aws_appflow"
            }
          }
        },
        "aws-cdk-lib.aws_appintegrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppIntegrations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appintegrations"
            },
            "python": {
              "module": "aws_cdk.aws_appintegrations"
            }
          }
        },
        "aws-cdk-lib.aws_applicationautoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationautoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_applicationautoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_applicationinsights": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationInsights"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationinsights"
            },
            "python": {
              "module": "aws_cdk.aws_applicationinsights"
            }
          }
        },
        "aws-cdk-lib.aws_appmesh": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppMesh"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appmesh"
            },
            "python": {
              "module": "aws_cdk.aws_appmesh"
            }
          }
        },
        "aws-cdk-lib.aws_apprunner": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppRunner"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apprunner"
            },
            "python": {
              "module": "aws_cdk.aws_apprunner"
            }
          }
        },
        "aws-cdk-lib.aws_appstream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppStream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appstream"
            },
            "python": {
              "module": "aws_cdk.aws_appstream"
            }
          }
        },
        "aws-cdk-lib.aws_appsync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appsync"
            },
            "python": {
              "module": "aws_cdk.aws_appsync"
            }
          }
        },
        "aws-cdk-lib.aws_aps": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.aps"
            },
            "python": {
              "module": "aws_cdk.aws_aps"
            }
          }
        },
        "aws-cdk-lib.aws_arczonalshift": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ARCZonalShift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.arczonalshift"
            },
            "python": {
              "module": "aws_cdk.aws_arczonalshift"
            }
          }
        },
        "aws-cdk-lib.aws_athena": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Athena"
            },
            "java": {
              "package": "software.amazon.awscdk.services.athena"
            },
            "python": {
              "module": "aws_cdk.aws_athena"
            }
          }
        },
        "aws-cdk-lib.aws_auditmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AuditManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.auditmanager"
            },
            "python": {
              "module": "aws_cdk.aws_auditmanager"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_common": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.Common"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.common"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_common"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_hooktargets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_hooktargets"
            }
          }
        },
        "aws-cdk-lib.aws_autoscalingplans": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScalingPlans"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscalingplans"
            },
            "python": {
              "module": "aws_cdk.aws_autoscalingplans"
            }
          }
        },
        "aws-cdk-lib.aws_b2bi": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.B2BI"
            },
            "java": {
              "package": "software.amazon.awscdk.services.b2bi"
            },
            "python": {
              "module": "aws_cdk.aws_b2bi"
            }
          }
        },
        "aws-cdk-lib.aws_backup": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Backup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backup"
            },
            "python": {
              "module": "aws_cdk.aws_backup"
            }
          }
        },
        "aws-cdk-lib.aws_backupgateway": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.BackupGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backupgateway"
            },
            "python": {
              "module": "aws_cdk.aws_backupgateway"
            }
          }
        },
        "aws-cdk-lib.aws_batch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Batch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.batch"
            },
            "python": {
              "module": "aws_cdk.aws_batch"
            }
          }
        },
        "aws-cdk-lib.aws_bedrock": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Bedrock"
            },
            "java": {
              "package": "software.amazon.awscdk.services.bedrock"
            },
            "python": {
              "module": "aws_cdk.aws_bedrock"
            }
          }
        },
        "aws-cdk-lib.aws_billingconductor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.BillingConductor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.billingconductor"
            },
            "python": {
              "module": "aws_cdk.aws_billingconductor"
            }
          }
        },
        "aws-cdk-lib.aws_budgets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Budgets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.budgets"
            },
            "python": {
              "module": "aws_cdk.aws_budgets"
            }
          }
        },
        "aws-cdk-lib.aws_cassandra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cassandra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cassandra"
            },
            "python": {
              "module": "aws_cdk.aws_cassandra"
            }
          }
        },
        "aws-cdk-lib.aws_ce": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CE"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ce"
            },
            "python": {
              "module": "aws_cdk.aws_ce"
            }
          }
        },
        "aws-cdk-lib.aws_certificatemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CertificateManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.certificatemanager"
            },
            "python": {
              "module": "aws_cdk.aws_certificatemanager"
            }
          }
        },
        "aws-cdk-lib.aws_chatbot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Chatbot"
            },
            "java": {
              "package": "software.amazon.awscdk.services.chatbot"
            },
            "python": {
              "module": "aws_cdk.aws_chatbot"
            }
          }
        },
        "aws-cdk-lib.aws_cleanrooms": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CleanRooms"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cleanrooms"
            },
            "python": {
              "module": "aws_cdk.aws_cleanrooms"
            }
          }
        },
        "aws-cdk-lib.aws_cloud9": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cloud9"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloud9"
            },
            "python": {
              "module": "aws_cdk.aws_cloud9"
            }
          }
        },
        "aws-cdk-lib.aws_cloudformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudformation"
            },
            "python": {
              "module": "aws_cdk.aws_cloudformation"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront.experimental": {},
        "aws-cdk-lib.aws_cloudfront_origins": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront.Origins"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront.origins"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront_origins"
            }
          }
        },
        "aws-cdk-lib.aws_cloudtrail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudTrail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudtrail"
            },
            "python": {
              "module": "aws_cdk.aws_cloudtrail"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch.actions"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codeartifact": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeArtifact"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeartifact"
            },
            "python": {
              "module": "aws_cdk.aws_codeartifact"
            }
          }
        },
        "aws-cdk-lib.aws_codebuild": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeBuild"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codebuild"
            },
            "python": {
              "module": "aws_cdk.aws_codebuild"
            }
          }
        },
        "aws-cdk-lib.aws_codecommit": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeCommit"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codecommit"
            },
            "python": {
              "module": "aws_cdk.aws_codecommit"
            }
          }
        },
        "aws-cdk-lib.aws_codedeploy": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeDeploy"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codedeploy"
            },
            "python": {
              "module": "aws_cdk.aws_codedeploy"
            }
          }
        },
        "aws-cdk-lib.aws_codeguruprofiler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruProfiler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeguruprofiler"
            },
            "python": {
              "module": "aws_cdk.aws_codeguruprofiler"
            }
          }
        },
        "aws-cdk-lib.aws_codegurureviewer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruReviewer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codegurureviewer"
            },
            "python": {
              "module": "aws_cdk.aws_codegurureviewer"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline.actions"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codestar": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Codestar"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestar"
            },
            "python": {
              "module": "aws_cdk.aws_codestar"
            }
          }
        },
        "aws-cdk-lib.aws_codestarconnections": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codestarconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codestarnotifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarNotifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarnotifications"
            },
            "python": {
              "module": "aws_cdk.aws_codestarnotifications"
            }
          }
        },
        "aws-cdk-lib.aws_cognito": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cognito"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cognito"
            },
            "python": {
              "module": "aws_cdk.aws_cognito"
            }
          }
        },
        "aws-cdk-lib.aws_comprehend": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Comprehend"
            },
            "java": {
              "package": "software.amazon.awscdk.services.comprehend"
            },
            "python": {
              "module": "aws_cdk.aws_comprehend"
            }
          }
        },
        "aws-cdk-lib.aws_config": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Config"
            },
            "java": {
              "package": "software.amazon.awscdk.services.config"
            },
            "python": {
              "module": "aws_cdk.aws_config"
            }
          }
        },
        "aws-cdk-lib.aws_connect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Connect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connect"
            },
            "python": {
              "module": "aws_cdk.aws_connect"
            }
          }
        },
        "aws-cdk-lib.aws_connectcampaigns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ConnectCampaigns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connectcampaigns"
            },
            "python": {
              "module": "aws_cdk.aws_connectcampaigns"
            }
          }
        },
        "aws-cdk-lib.aws_controltower": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ControlTower"
            },
            "java": {
              "package": "software.amazon.awscdk.services.controltower"
            },
            "python": {
              "module": "aws_cdk.aws_controltower"
            }
          }
        },
        "aws-cdk-lib.aws_cur": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CUR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cur"
            },
            "python": {
              "module": "aws_cdk.aws_cur"
            }
          }
        },
        "aws-cdk-lib.aws_customerprofiles": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CustomerProfiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.customerprofiles"
            },
            "python": {
              "module": "aws_cdk.aws_customerprofiles"
            }
          }
        },
        "aws-cdk-lib.aws_databrew": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataBrew"
            },
            "java": {
              "package": "software.amazon.awscdk.services.databrew"
            },
            "python": {
              "module": "aws_cdk.aws_databrew"
            }
          }
        },
        "aws-cdk-lib.aws_datapipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataPipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datapipeline"
            },
            "python": {
              "module": "aws_cdk.aws_datapipeline"
            }
          }
        },
        "aws-cdk-lib.aws_datasync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datasync"
            },
            "python": {
              "module": "aws_cdk.aws_datasync"
            }
          }
        },
        "aws-cdk-lib.aws_datazone": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.DataZone"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datazone"
            },
            "python": {
              "module": "aws_cdk.aws_datazone"
            }
          }
        },
        "aws-cdk-lib.aws_dax": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DAX"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dax"
            },
            "python": {
              "module": "aws_cdk.aws_dax"
            }
          }
        },
        "aws-cdk-lib.aws_detective": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Detective"
            },
            "java": {
              "package": "software.amazon.awscdk.services.detective"
            },
            "python": {
              "module": "aws_cdk.aws_detective"
            }
          }
        },
        "aws-cdk-lib.aws_devicefarm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DeviceFarm"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devicefarm"
            },
            "python": {
              "module": "aws_cdk.aws_devicefarm"
            }
          }
        },
        "aws-cdk-lib.aws_devopsguru": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DevOpsGuru"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devopsguru"
            },
            "python": {
              "module": "aws_cdk.aws_devopsguru"
            }
          }
        },
        "aws-cdk-lib.aws_directoryservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DirectoryService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.directoryservice"
            },
            "python": {
              "module": "aws_cdk.aws_directoryservice"
            }
          }
        },
        "aws-cdk-lib.aws_dlm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DLM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dlm"
            },
            "python": {
              "module": "aws_cdk.aws_dlm"
            }
          }
        },
        "aws-cdk-lib.aws_dms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dms"
            },
            "python": {
              "module": "aws_cdk.aws_dms"
            }
          }
        },
        "aws-cdk-lib.aws_docdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdb"
            },
            "python": {
              "module": "aws_cdk.aws_docdb"
            }
          }
        },
        "aws-cdk-lib.aws_docdbelastic": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDBElastic"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdbelastic"
            },
            "python": {
              "module": "aws_cdk.aws_docdbelastic"
            }
          }
        },
        "aws-cdk-lib.aws_dynamodb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DynamoDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dynamodb"
            },
            "python": {
              "module": "aws_cdk.aws_dynamodb"
            }
          }
        },
        "aws-cdk-lib.aws_ec2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EC2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ec2"
            },
            "python": {
              "module": "aws_cdk.aws_ec2"
            }
          }
        },
        "aws-cdk-lib.aws_ecr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr"
            },
            "python": {
              "module": "aws_cdk.aws_ecr"
            }
          }
        },
        "aws-cdk-lib.aws_ecr_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ecr.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr.assets"
            },
            "python": {
              "module": "aws_cdk.aws_ecr_assets"
            }
          }
        },
        "aws-cdk-lib.aws_ecs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs"
            },
            "python": {
              "module": "aws_cdk.aws_ecs"
            }
          }
        },
        "aws-cdk-lib.aws_ecs_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_ecs_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_efs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EFS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.efs"
            },
            "python": {
              "module": "aws_cdk.aws_efs"
            }
          }
        },
        "aws-cdk-lib.aws_eks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EKS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eks"
            },
            "python": {
              "module": "aws_cdk.aws_eks"
            }
          }
        },
        "aws-cdk-lib.aws_elasticache": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElastiCache"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticache"
            },
            "python": {
              "module": "aws_cdk.aws_elasticache"
            }
          }
        },
        "aws-cdk-lib.aws_elasticbeanstalk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticBeanstalk"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticbeanstalk"
            },
            "python": {
              "module": "aws_cdk.aws_elasticbeanstalk"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancing": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancing"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancing"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.actions"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_actions"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.targets"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_targets"
            }
          }
        },
        "aws-cdk-lib.aws_elasticsearch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Elasticsearch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticsearch"
            },
            "python": {
              "module": "aws_cdk.aws_elasticsearch"
            }
          }
        },
        "aws-cdk-lib.aws_emr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emr"
            },
            "python": {
              "module": "aws_cdk.aws_emr"
            }
          }
        },
        "aws-cdk-lib.aws_emrcontainers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRContainers"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrcontainers"
            },
            "python": {
              "module": "aws_cdk.aws_emrcontainers"
            }
          }
        },
        "aws-cdk-lib.aws_emrserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrserverless"
            },
            "python": {
              "module": "aws_cdk.aws_emrserverless"
            }
          }
        },
        "aws-cdk-lib.aws_entityresolution": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.EntityResolution"
            },
            "java": {
              "package": "software.amazon.awscdk.services.entityresolution"
            },
            "python": {
              "module": "aws_cdk.aws_entityresolution"
            }
          }
        },
        "aws-cdk-lib.aws_events": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events"
            },
            "python": {
              "module": "aws_cdk.aws_events"
            }
          }
        },
        "aws-cdk-lib.aws_events_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events.targets"
            },
            "python": {
              "module": "aws_cdk.aws_events_targets"
            }
          }
        },
        "aws-cdk-lib.aws_eventschemas": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EventSchemas"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eventschemas"
            },
            "python": {
              "module": "aws_cdk.aws_eventschemas"
            }
          }
        },
        "aws-cdk-lib.aws_evidently": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Evidently"
            },
            "java": {
              "package": "software.amazon.awscdk.services.evidently"
            },
            "python": {
              "module": "aws_cdk.aws_evidently"
            }
          }
        },
        "aws-cdk-lib.aws_finspace": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FinSpace"
            },
            "java": {
              "package": "software.amazon.awscdk.services.finspace"
            },
            "python": {
              "module": "aws_cdk.aws_finspace"
            }
          }
        },
        "aws-cdk-lib.aws_fis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fis"
            },
            "python": {
              "module": "aws_cdk.aws_fis"
            }
          }
        },
        "aws-cdk-lib.aws_fms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fms"
            },
            "python": {
              "module": "aws_cdk.aws_fms"
            }
          }
        },
        "aws-cdk-lib.aws_forecast": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Forecast"
            },
            "java": {
              "package": "software.amazon.awscdk.services.forecast"
            },
            "python": {
              "module": "aws_cdk.aws_forecast"
            }
          }
        },
        "aws-cdk-lib.aws_frauddetector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FraudDetector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.frauddetector"
            },
            "python": {
              "module": "aws_cdk.aws_frauddetector"
            }
          }
        },
        "aws-cdk-lib.aws_fsx": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FSx"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fsx"
            },
            "python": {
              "module": "aws_cdk.aws_fsx"
            }
          }
        },
        "aws-cdk-lib.aws_gamelift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GameLift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.gamelift"
            },
            "python": {
              "module": "aws_cdk.aws_gamelift"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator_endpoints": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator.Endpoints"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator.endpoints"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator_endpoints"
            }
          }
        },
        "aws-cdk-lib.aws_glue": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Glue"
            },
            "java": {
              "package": "software.amazon.awscdk.services.glue"
            },
            "python": {
              "module": "aws_cdk.aws_glue"
            }
          }
        },
        "aws-cdk-lib.aws_grafana": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Grafana"
            },
            "java": {
              "package": "software.amazon.awscdk.services.grafana"
            },
            "python": {
              "module": "aws_cdk.aws_grafana"
            }
          }
        },
        "aws-cdk-lib.aws_greengrass": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Greengrass"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrass"
            },
            "python": {
              "module": "aws_cdk.aws_greengrass"
            }
          }
        },
        "aws-cdk-lib.aws_greengrassv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GreengrassV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrassv2"
            },
            "python": {
              "module": "aws_cdk.aws_greengrassv2"
            }
          }
        },
        "aws-cdk-lib.aws_groundstation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GroundStation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.groundstation"
            },
            "python": {
              "module": "aws_cdk.aws_groundstation"
            }
          }
        },
        "aws-cdk-lib.aws_guardduty": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GuardDuty"
            },
            "java": {
              "package": "software.amazon.awscdk.services.guardduty"
            },
            "python": {
              "module": "aws_cdk.aws_guardduty"
            }
          }
        },
        "aws-cdk-lib.aws_healthimaging": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.HealthImaging"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthimaging"
            },
            "python": {
              "module": "aws_cdk.aws_healthimaging"
            }
          }
        },
        "aws-cdk-lib.aws_healthlake": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.HealthLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthlake"
            },
            "python": {
              "module": "aws_cdk.aws_healthlake"
            }
          }
        },
        "aws-cdk-lib.aws_iam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iam"
            },
            "python": {
              "module": "aws_cdk.aws_iam"
            }
          }
        },
        "aws-cdk-lib.aws_identitystore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IdentityStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.identitystore"
            },
            "python": {
              "module": "aws_cdk.aws_identitystore"
            }
          }
        },
        "aws-cdk-lib.aws_imagebuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ImageBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.imagebuilder"
            },
            "python": {
              "module": "aws_cdk.aws_imagebuilder"
            }
          }
        },
        "aws-cdk-lib.aws_inspector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Inspector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspector"
            },
            "python": {
              "module": "aws_cdk.aws_inspector"
            }
          }
        },
        "aws-cdk-lib.aws_inspectorv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InspectorV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspectorv2"
            },
            "python": {
              "module": "aws_cdk.aws_inspectorv2"
            }
          }
        },
        "aws-cdk-lib.aws_internetmonitor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InternetMonitor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.internetmonitor"
            },
            "python": {
              "module": "aws_cdk.aws_internetmonitor"
            }
          }
        },
        "aws-cdk-lib.aws_iot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot"
            },
            "python": {
              "module": "aws_cdk.aws_iot"
            }
          }
        },
        "aws-cdk-lib.aws_iot1click": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT1Click"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot1click"
            },
            "python": {
              "module": "aws_cdk.aws_iot1click"
            }
          }
        },
        "aws-cdk-lib.aws_iotanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_iotanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_iotcoredeviceadvisor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTCoreDeviceAdvisor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotcoredeviceadvisor"
            },
            "python": {
              "module": "aws_cdk.aws_iotcoredeviceadvisor"
            }
          }
        },
        "aws-cdk-lib.aws_iotevents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTEvents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotevents"
            },
            "python": {
              "module": "aws_cdk.aws_iotevents"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleethub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleethub"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleethub"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleetwise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleetwise"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleetwise"
            }
          }
        },
        "aws-cdk-lib.aws_iotsitewise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTSiteWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotsitewise"
            },
            "python": {
              "module": "aws_cdk.aws_iotsitewise"
            }
          }
        },
        "aws-cdk-lib.aws_iotthingsgraph": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTThingsGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotthingsgraph"
            },
            "python": {
              "module": "aws_cdk.aws_iotthingsgraph"
            }
          }
        },
        "aws-cdk-lib.aws_iottwinmaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTTwinMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iottwinmaker"
            },
            "python": {
              "module": "aws_cdk.aws_iottwinmaker"
            }
          }
        },
        "aws-cdk-lib.aws_iotwireless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTWireless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotwireless"
            },
            "python": {
              "module": "aws_cdk.aws_iotwireless"
            }
          }
        },
        "aws-cdk-lib.aws_ivs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ivs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivs"
            },
            "python": {
              "module": "aws_cdk.aws_ivs"
            }
          }
        },
        "aws-cdk-lib.aws_ivschat": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IVSChat"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivschat"
            },
            "python": {
              "module": "aws_cdk.aws_ivschat"
            }
          }
        },
        "aws-cdk-lib.aws_kafkaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KafkaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kafkaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_kafkaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_kendra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kendra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendra"
            },
            "python": {
              "module": "aws_cdk.aws_kendra"
            }
          }
        },
        "aws-cdk-lib.aws_kendraranking": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KendraRanking"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendraranking"
            },
            "python": {
              "module": "aws_cdk.aws_kendraranking"
            }
          }
        },
        "aws-cdk-lib.aws_kinesis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kinesis"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesis"
            },
            "python": {
              "module": "aws_cdk.aws_kinesis"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalyticsv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalyticsV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalyticsv2"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalyticsv2"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisfirehose": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisFirehose"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisfirehose"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisfirehose"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisvideo": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisVideo"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisvideo"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisvideo"
            }
          }
        },
        "aws-cdk-lib.aws_kms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kms"
            },
            "python": {
              "module": "aws_cdk.aws_kms"
            }
          }
        },
        "aws-cdk-lib.aws_lakeformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LakeFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lakeformation"
            },
            "python": {
              "module": "aws_cdk.aws_lakeformation"
            }
          }
        },
        "aws-cdk-lib.aws_lambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda"
            },
            "python": {
              "module": "aws_cdk.aws_lambda"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_event_sources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.EventSources"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.eventsources"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_event_sources"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_nodejs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Nodejs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.nodejs"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_nodejs"
            }
          }
        },
        "aws-cdk-lib.aws_lex": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lex"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lex"
            },
            "python": {
              "module": "aws_cdk.aws_lex"
            }
          }
        },
        "aws-cdk-lib.aws_licensemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LicenseManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.licensemanager"
            },
            "python": {
              "module": "aws_cdk.aws_licensemanager"
            }
          }
        },
        "aws-cdk-lib.aws_lightsail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lightsail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lightsail"
            },
            "python": {
              "module": "aws_cdk.aws_lightsail"
            }
          }
        },
        "aws-cdk-lib.aws_location": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Location"
            },
            "java": {
              "package": "software.amazon.awscdk.services.location"
            },
            "python": {
              "module": "aws_cdk.aws_location"
            }
          }
        },
        "aws-cdk-lib.aws_logs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs"
            },
            "python": {
              "module": "aws_cdk.aws_logs"
            }
          }
        },
        "aws-cdk-lib.aws_logs_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_logs_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutequipment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutEquipment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutequipment"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutequipment"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutmetrics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutMetrics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutmetrics"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutmetrics"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutvision": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutVision"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutvision"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutvision"
            }
          }
        },
        "aws-cdk-lib.aws_m2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.M2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.m2"
            },
            "python": {
              "module": "aws_cdk.aws_m2"
            }
          }
        },
        "aws-cdk-lib.aws_macie": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Macie"
            },
            "java": {
              "package": "software.amazon.awscdk.services.macie"
            },
            "python": {
              "module": "aws_cdk.aws_macie"
            }
          }
        },
        "aws-cdk-lib.aws_managedblockchain": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ManagedBlockchain"
            },
            "java": {
              "package": "software.amazon.awscdk.services.managedblockchain"
            },
            "python": {
              "module": "aws_cdk.aws_managedblockchain"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconvert": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConvert"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconvert"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconvert"
            }
          }
        },
        "aws-cdk-lib.aws_medialive": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaLive"
            },
            "java": {
              "package": "software.amazon.awscdk.services.medialive"
            },
            "python": {
              "module": "aws_cdk.aws_medialive"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackage": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaPackage"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackage"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackage"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackagev2": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.MediaPackageV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackagev2"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackagev2"
            }
          }
        },
        "aws-cdk-lib.aws_mediastore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediastore"
            },
            "python": {
              "module": "aws_cdk.aws_mediastore"
            }
          }
        },
        "aws-cdk-lib.aws_mediatailor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaTailor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediatailor"
            },
            "python": {
              "module": "aws_cdk.aws_mediatailor"
            }
          }
        },
        "aws-cdk-lib.aws_memorydb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MemoryDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.memorydb"
            },
            "python": {
              "module": "aws_cdk.aws_memorydb"
            }
          }
        },
        "aws-cdk-lib.aws_msk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MSK"
            },
            "java": {
              "package": "software.amazon.awscdk.services.msk"
            },
            "python": {
              "module": "aws_cdk.aws_msk"
            }
          }
        },
        "aws-cdk-lib.aws_mwaa": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MWAA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mwaa"
            },
            "python": {
              "module": "aws_cdk.aws_mwaa"
            }
          }
        },
        "aws-cdk-lib.aws_neptune": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Neptune"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptune"
            },
            "python": {
              "module": "aws_cdk.aws_neptune"
            }
          }
        },
        "aws-cdk-lib.aws_neptunegraph": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.NeptuneGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptunegraph"
            },
            "python": {
              "module": "aws_cdk.aws_neptunegraph"
            }
          }
        },
        "aws-cdk-lib.aws_networkfirewall": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkFirewall"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkfirewall"
            },
            "python": {
              "module": "aws_cdk.aws_networkfirewall"
            }
          }
        },
        "aws-cdk-lib.aws_networkmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkmanager"
            },
            "python": {
              "module": "aws_cdk.aws_networkmanager"
            }
          }
        },
        "aws-cdk-lib.aws_nimblestudio": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NimbleStudio"
            },
            "java": {
              "package": "software.amazon.awscdk.services.nimblestudio"
            },
            "python": {
              "module": "aws_cdk.aws_nimblestudio"
            }
          }
        },
        "aws-cdk-lib.aws_oam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Oam"
            },
            "java": {
              "package": "software.amazon.awscdk.services.oam"
            },
            "python": {
              "module": "aws_cdk.aws_oam"
            }
          }
        },
        "aws-cdk-lib.aws_omics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Omics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.omics"
            },
            "python": {
              "module": "aws_cdk.aws_omics"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchserverless"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchserverless"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchservice"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchservice"
            }
          }
        },
        "aws-cdk-lib.aws_opsworks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworks"
            },
            "python": {
              "module": "aws_cdk.aws_opsworks"
            }
          }
        },
        "aws-cdk-lib.aws_opsworkscm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorksCM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworkscm"
            },
            "python": {
              "module": "aws_cdk.aws_opsworkscm"
            }
          }
        },
        "aws-cdk-lib.aws_organizations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Organizations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.organizations"
            },
            "python": {
              "module": "aws_cdk.aws_organizations"
            }
          }
        },
        "aws-cdk-lib.aws_osis": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.OSIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.osis"
            },
            "python": {
              "module": "aws_cdk.aws_osis"
            }
          }
        },
        "aws-cdk-lib.aws_panorama": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Panorama"
            },
            "java": {
              "package": "software.amazon.awscdk.services.panorama"
            },
            "python": {
              "module": "aws_cdk.aws_panorama"
            }
          }
        },
        "aws-cdk-lib.aws_pcaconnectorad": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PCAConnectorAD"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pcaconnectorad"
            },
            "python": {
              "module": "aws_cdk.aws_pcaconnectorad"
            }
          }
        },
        "aws-cdk-lib.aws_personalize": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Personalize"
            },
            "java": {
              "package": "software.amazon.awscdk.services.personalize"
            },
            "python": {
              "module": "aws_cdk.aws_personalize"
            }
          }
        },
        "aws-cdk-lib.aws_pinpoint": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pinpoint"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpoint"
            },
            "python": {
              "module": "aws_cdk.aws_pinpoint"
            }
          }
        },
        "aws-cdk-lib.aws_pinpointemail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.PinpointEmail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpointemail"
            },
            "python": {
              "module": "aws_cdk.aws_pinpointemail"
            }
          }
        },
        "aws-cdk-lib.aws_pipes": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pipes"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pipes"
            },
            "python": {
              "module": "aws_cdk.aws_pipes"
            }
          }
        },
        "aws-cdk-lib.aws_proton": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Proton"
            },
            "java": {
              "package": "software.amazon.awscdk.services.proton"
            },
            "python": {
              "module": "aws_cdk.aws_proton"
            }
          }
        },
        "aws-cdk-lib.aws_qldb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QLDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qldb"
            },
            "python": {
              "module": "aws_cdk.aws_qldb"
            }
          }
        },
        "aws-cdk-lib.aws_quicksight": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QuickSight"
            },
            "java": {
              "package": "software.amazon.awscdk.services.quicksight"
            },
            "python": {
              "module": "aws_cdk.aws_quicksight"
            }
          }
        },
        "aws-cdk-lib.aws_ram": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ram"
            },
            "python": {
              "module": "aws_cdk.aws_ram"
            }
          }
        },
        "aws-cdk-lib.aws_rds": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RDS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rds"
            },
            "python": {
              "module": "aws_cdk.aws_rds"
            }
          }
        },
        "aws-cdk-lib.aws_redshift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Redshift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshift"
            },
            "python": {
              "module": "aws_cdk.aws_redshift"
            }
          }
        },
        "aws-cdk-lib.aws_redshiftserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RedshiftServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshiftserverless"
            },
            "python": {
              "module": "aws_cdk.aws_redshiftserverless"
            }
          }
        },
        "aws-cdk-lib.aws_refactorspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RefactorSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.refactorspaces"
            },
            "python": {
              "module": "aws_cdk.aws_refactorspaces"
            }
          }
        },
        "aws-cdk-lib.aws_rekognition": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Rekognition"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rekognition"
            },
            "python": {
              "module": "aws_cdk.aws_rekognition"
            }
          }
        },
        "aws-cdk-lib.aws_resiliencehub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResilienceHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resiliencehub"
            },
            "python": {
              "module": "aws_cdk.aws_resiliencehub"
            }
          }
        },
        "aws-cdk-lib.aws_resourceexplorer2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceExplorer2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourceexplorer2"
            },
            "python": {
              "module": "aws_cdk.aws_resourceexplorer2"
            }
          }
        },
        "aws-cdk-lib.aws_resourcegroups": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceGroups"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourcegroups"
            },
            "python": {
              "module": "aws_cdk.aws_resourcegroups"
            }
          }
        },
        "aws-cdk-lib.aws_robomaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RoboMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.robomaker"
            },
            "python": {
              "module": "aws_cdk.aws_robomaker"
            }
          }
        },
        "aws-cdk-lib.aws_rolesanywhere": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RolesAnywhere"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rolesanywhere"
            },
            "python": {
              "module": "aws_cdk.aws_rolesanywhere"
            }
          }
        },
        "aws-cdk-lib.aws_route53": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53"
            },
            "python": {
              "module": "aws_cdk.aws_route53"
            }
          }
        },
        "aws-cdk-lib.aws_route53_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_route53_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_route53_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.targets"
            },
            "python": {
              "module": "aws_cdk.aws_route53_targets"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoverycontrol": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryControl"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoverycontrol"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoverycontrol"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoveryreadiness": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryReadiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoveryreadiness"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoveryreadiness"
            }
          }
        },
        "aws-cdk-lib.aws_route53resolver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53Resolver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53resolver"
            },
            "python": {
              "module": "aws_cdk.aws_route53resolver"
            }
          }
        },
        "aws-cdk-lib.aws_rum": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RUM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rum"
            },
            "python": {
              "module": "aws_cdk.aws_rum"
            }
          }
        },
        "aws-cdk-lib.aws_s3": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3"
            },
            "python": {
              "module": "aws_cdk.aws_s3"
            }
          }
        },
        "aws-cdk-lib.aws_s3_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.assets"
            },
            "python": {
              "module": "aws_cdk.aws_s3_assets"
            }
          }
        },
        "aws-cdk-lib.aws_s3_deployment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Deployment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.deployment"
            },
            "python": {
              "module": "aws_cdk.aws_s3_deployment"
            }
          }
        },
        "aws-cdk-lib.aws_s3_notifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Notifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.notifications"
            },
            "python": {
              "module": "aws_cdk.aws_s3_notifications"
            }
          }
        },
        "aws-cdk-lib.aws_s3express": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.S3Express"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3express"
            },
            "python": {
              "module": "aws_cdk.aws_s3express"
            }
          }
        },
        "aws-cdk-lib.aws_s3objectlambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3ObjectLambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3objectlambda"
            },
            "python": {
              "module": "aws_cdk.aws_s3objectlambda"
            }
          }
        },
        "aws-cdk-lib.aws_s3outposts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3Outposts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3outposts"
            },
            "python": {
              "module": "aws_cdk.aws_s3outposts"
            }
          }
        },
        "aws-cdk-lib.aws_sagemaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Sagemaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sagemaker"
            },
            "python": {
              "module": "aws_cdk.aws_sagemaker"
            }
          }
        },
        "aws-cdk-lib.aws_sam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sam"
            },
            "python": {
              "module": "aws_cdk.aws_sam"
            }
          }
        },
        "aws-cdk-lib.aws_scheduler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Scheduler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.scheduler"
            },
            "python": {
              "module": "aws_cdk.aws_scheduler"
            }
          }
        },
        "aws-cdk-lib.aws_sdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sdb"
            },
            "python": {
              "module": "aws_cdk.aws_sdb"
            }
          }
        },
        "aws-cdk-lib.aws_secretsmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecretsManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.secretsmanager"
            },
            "python": {
              "module": "aws_cdk.aws_secretsmanager"
            }
          }
        },
        "aws-cdk-lib.aws_securityhub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecurityHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securityhub"
            },
            "python": {
              "module": "aws_cdk.aws_securityhub"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalog": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalog"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalog"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalog"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalogappregistry": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalogappregistry"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalogappregistry"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalogappregistry"
            }
          }
        },
        "aws-cdk-lib.aws_servicediscovery": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ServiceDiscovery"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicediscovery"
            },
            "python": {
              "module": "aws_cdk.aws_servicediscovery"
            }
          }
        },
        "aws-cdk-lib.aws_ses": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses"
            },
            "python": {
              "module": "aws_cdk.aws_ses"
            }
          }
        },
        "aws-cdk-lib.aws_ses_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses.actions"
            },
            "python": {
              "module": "aws_cdk.aws_ses_actions"
            }
          }
        },
        "aws-cdk-lib.aws_shield": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Shield"
            },
            "java": {
              "package": "software.amazon.awscdk.services.shield"
            },
            "python": {
              "module": "aws_cdk.aws_shield"
            }
          }
        },
        "aws-cdk-lib.aws_signer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Signer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.signer"
            },
            "python": {
              "module": "aws_cdk.aws_signer"
            }
          }
        },
        "aws-cdk-lib.aws_simspaceweaver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SimSpaceWeaver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.simspaceweaver"
            },
            "python": {
              "module": "aws_cdk.aws_simspaceweaver"
            }
          }
        },
        "aws-cdk-lib.aws_sns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns"
            },
            "python": {
              "module": "aws_cdk.aws_sns"
            }
          }
        },
        "aws-cdk-lib.aws_sns_subscriptions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS.Subscriptions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns.subscriptions"
            },
            "python": {
              "module": "aws_cdk.aws_sns_subscriptions"
            }
          }
        },
        "aws-cdk-lib.aws_sqs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SQS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sqs"
            },
            "python": {
              "module": "aws_cdk.aws_sqs"
            }
          }
        },
        "aws-cdk-lib.aws_ssm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssm"
            },
            "python": {
              "module": "aws_cdk.aws_ssm"
            }
          }
        },
        "aws-cdk-lib.aws_ssmcontacts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMContacts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmcontacts"
            },
            "python": {
              "module": "aws_cdk.aws_ssmcontacts"
            }
          }
        },
        "aws-cdk-lib.aws_ssmguiconnect": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.SSMGuiConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmguiconnect"
            },
            "python": {
              "module": "aws_cdk.aws_ssmguiconnect"
            }
          }
        },
        "aws-cdk-lib.aws_ssmincidents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMIncidents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmincidents"
            },
            "python": {
              "module": "aws_cdk.aws_ssmincidents"
            }
          }
        },
        "aws-cdk-lib.aws_sso": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSO"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sso"
            },
            "python": {
              "module": "aws_cdk.aws_sso"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions_tasks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions.Tasks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions.tasks"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions_tasks"
            }
          }
        },
        "aws-cdk-lib.aws_supportapp": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SupportApp"
            },
            "java": {
              "package": "software.amazon.awscdk.services.supportapp"
            },
            "python": {
              "module": "aws_cdk.aws_supportapp"
            }
          }
        },
        "aws-cdk-lib.aws_synthetics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Synthetics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.synthetics"
            },
            "python": {
              "module": "aws_cdk.aws_synthetics"
            }
          }
        },
        "aws-cdk-lib.aws_systemsmanagersap": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SystemsManagerSAP"
            },
            "java": {
              "package": "software.amazon.awscdk.services.systemsmanagersap"
            },
            "python": {
              "module": "aws_cdk.aws_systemsmanagersap"
            }
          }
        },
        "aws-cdk-lib.aws_timestream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Timestream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.timestream"
            },
            "python": {
              "module": "aws_cdk.aws_timestream"
            }
          }
        },
        "aws-cdk-lib.aws_transfer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Transfer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.transfer"
            },
            "python": {
              "module": "aws_cdk.aws_transfer"
            }
          }
        },
        "aws-cdk-lib.aws_verifiedpermissions": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.VerifiedPermissions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.verifiedpermissions"
            },
            "python": {
              "module": "aws_cdk.aws_verifiedpermissions"
            }
          }
        },
        "aws-cdk-lib.aws_voiceid": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VoiceID"
            },
            "java": {
              "package": "software.amazon.awscdk.services.voiceid"
            },
            "python": {
              "module": "aws_cdk.aws_voiceid"
            }
          }
        },
        "aws-cdk-lib.aws_vpclattice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VpcLattice"
            },
            "java": {
              "package": "software.amazon.awscdk.services.vpclattice"
            },
            "python": {
              "module": "aws_cdk.aws_vpclattice"
            }
          }
        },
        "aws-cdk-lib.aws_waf": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAF"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf"
            },
            "python": {
              "module": "aws_cdk.aws_waf"
            }
          }
        },
        "aws-cdk-lib.aws_wafregional": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFRegional"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf.regional"
            },
            "python": {
              "module": "aws_cdk.aws_wafregional"
            }
          }
        },
        "aws-cdk-lib.aws_wafv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wafv2"
            },
            "python": {
              "module": "aws_cdk.aws_wafv2"
            }
          }
        },
        "aws-cdk-lib.aws_wisdom": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Wisdom"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wisdom"
            },
            "python": {
              "module": "aws_cdk.aws_wisdom"
            }
          }
        },
        "aws-cdk-lib.aws_workspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WorkSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspaces"
            },
            "python": {
              "module": "aws_cdk.aws_workspaces"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesthinclient": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesThinClient"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesthinclient"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesthinclient"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesweb": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesWeb"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesweb"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesweb"
            }
          }
        },
        "aws-cdk-lib.aws_xray": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.XRay"
            },
            "java": {
              "package": "software.amazon.awscdk.services.xray"
            },
            "python": {
              "module": "aws_cdk.aws_xray"
            }
          }
        },
        "aws-cdk-lib.cloud_assembly_schema": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudAssembly.Schema"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudassembly.schema"
            },
            "python": {
              "module": "aws_cdk.cloud_assembly_schema"
            }
          }
        },
        "aws-cdk-lib.cloudformation_include": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudFormation.Include"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudformation.include"
            },
            "python": {
              "module": "aws_cdk.cloudformation_include"
            }
          }
        },
        "aws-cdk-lib.custom_resources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CustomResources"
            },
            "java": {
              "package": "software.amazon.awscdk.customresources"
            },
            "python": {
              "module": "aws_cdk.custom_resources"
            }
          }
        },
        "aws-cdk-lib.cx_api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "package": "software.amazon.awscdk.cxapi"
            },
            "python": {
              "module": "aws_cdk.cx_api"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_awscli": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.AwsCli"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.awscli"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_awscli"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_kubectl": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.Kubectl"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.kubectl"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_kubectl"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_node_proxy_agent": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.NodeProxyAgent"
            },
            "java": {
              "package": "software.amazon.awscdk.lambda.layer.node.proxy.agent"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_node_proxy_agent"
            }
          }
        },
        "aws-cdk-lib.pipelines": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Pipelines"
            },
            "java": {
              "package": "software.amazon.awscdk.pipelines"
            },
            "python": {
              "module": "aws_cdk.pipelines"
            }
          }
        },
        "aws-cdk-lib.region_info": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.RegionInfo"
            },
            "java": {
              "package": "software.amazon.awscdk.regioninfo"
            },
            "python": {
              "module": "aws_cdk.region_info"
            }
          }
        },
        "aws-cdk-lib.triggers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Triggers"
            },
            "java": {
              "package": "software.amazon.awscdk.triggers"
            },
            "python": {
              "module": "aws_cdk.triggers"
            }
          }
        }
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK.Lib"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdk"
        },
        "java": {
          "maven": {
            "artifactId": "aws-cdk-lib",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "aws-cdk-lib"
        },
        "python": {
          "distName": "aws-cdk-lib",
          "module": "aws_cdk"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "AWS CDK Constructs for the PackYak Lakehouse Platform",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/sam-goodwin/packyak",
  "jsiiVersion": "5.3.20 (build b624106)",
  "keywords": [
    "packyak",
    "aws-cdk",
    "lakehouse"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    },
    "tscRootDir": "src"
  },
  "name": "@packyak/aws-cdk",
  "readme": {
    "markdown": "# PackYak ![image](https://github.com/sam-goodwin/packyak/assets/38672686/249af136-45fb-4d13-82bb-5818e803eeb0)\n\n[![PyPI version](https://badge.fury.io/py/packyak.svg)](https://badge.fury.io/py/packyak)\n\n# Packyak AWS CDK\n\nPackYak is a next-generation framework for building and deploying Data Lakehouses in AWS with a Git-like versioned developer workflow that simplifies how Data Scientists and Data Engineers collaborate.\n\nIt enables you to deploy your entire Data Lakehouse, ETL and Machine Learning platforms on AWS with no external dependencies, maintain your Data Tables with Git-like versioning semantics and scale data production with Dagster-like Software-defined Asset Graphs.\n\nIt combines 5 key technologies into one framework that makes scaling Data Lakehouses and Data Science teams dead simple:\n1. Git-like versioning of Data Tables with [Project Nessie](https://projectnessie.org/) - no more worrying about the version of data, simply use branches, tags and commits to freeze data or roll back mistakes.\n2. Software-defined Assets (as seen in Dagster) - think of your data pipelines in terms of the data it produces. Greatly simplify how data is produced, modified over time and backfilled in the event of errors.\n3. Infrastructure-as-Code (AWS CDK and Pulumi) - deploy in minutes and manage it all yourself with minimal effort.\n4. Apache Spark - write your ETL as simple python processes that are then scaled automatically over a managed AWS EMR Spark Cluster.\n5. Streamlit - build Streamlit applications that integrate the Data Lakehouse and Apache Spark to provide interactive reports and exploratory tools over the versioned data lake.\n\n# Get Started\n\n## Install Docker\n\nIf you haven't already, install [Docker](https://docs.docker.com/get-docker/).\n\n## Install Python Poetry & Plugins\n\n```sh\n# Install the Python Poetry CLI\ncurl -sSL https://install.python-poetry.org | python3 -\n\n# Add the export plugin to generate narrow requirements.txt\npoetry self add poetry-plugin-export\n```\n\n## Install the `packyak` CLI:\n```sh\npip install packyak\n```\n\n## Create a new Project\n\n```sh\npackyak new my-project\ncd ./my-project\n```\n\n## Deploy to AWS\n```sh\npoetry run cdk deploy\n```\n\n## Git-like Data Catalog (Project Nessie)\n\nPackYak comes with a Construct for hosting a [Project Nessie](https://projectnessie.org/) catalog that supports Git-like versioning of the tables in a Data Lakehouse.\n\nIt deploys with an AWS DynamoDB Versioned store and an API hosted in AWS Lambda or AWS ECS. The Nessie Server is stateless and can be scaled easily with minimal-to-zero operational overhead.\n\n### Create a `NessieDynamoDBVersionStore`\n\n```py\nfrom packyak.aws_cdk import DynamoDBNessieVersionStore\n\nversionStore = DynamoDBNessieVersionStore(\n  scope=stack,\n  id=\"VersionStore\",\n  versionStoreName=\"my-version-store\",\n)\n```\n\n### Create a Bucket to store Data Tables (e.g. Parquet files). This will store the \"Repository\"'s data.\n\n```py\nmyRepoBucket = Bucket(\n  scope=stack,\n  id=\"MyCatalogBucket\",\n)\n```\n\n### Create the Nessie Catalog Service\n\n```py\n# hosted on AWS ECS\nmyCatalog = NessieECSCatalog(\n  scope=stack,\n  id=\"MyCatalog\",\n  vpc=vpc,\n  warehouseBucket=myRepoBucket,\n  catalogName=lakeHouseName,\n  versionStore=versionStore,\n)\n```\n\n### Create a Branch\n\nBranch off the `main` branch of data into a `dev` branch to \"freeze\" the data as of a particular commit\n\n```sql\nCREATE BRANCH dev FROM main\n```\n\n## Deploy a Spark Cluster\n\nCreate an EMR Cluster for processing data\n\n```py\nspark = Cluster(\n  scope=stack,\n  id=\"Spark\",\n  clusterName=\"my-cluster\",\n  vpc=vpc,\n  catalogs={\n    # use the Nessie Catalog as the default data catalog for Spark SQL queries\n    \"spark_catalog\": myCatalog,\n  },\n  installSSMAgent=true,\n)\n```\n\n## Configure SparkSQL to be served over JDBC\n\n```py\nsparkSQL = spark.jdbc(port=10001)\n```\n\n## Deploy Streamlit Site\n\nStand up a Streamlit Site to serve interactive reports and applications over your data.\n\n```py\nsite = StreamlitSite(\n  scope=stack,\n  # Point it at the Streamlit site entrypoint\n  home=\"app/home.py\",\n  # Where the Streamlit pages/tabs are, defaults to `dirname(home)/pages/*.py`\n  # pages=\"app/pages\"\n)\n```\n\n## Deploy to AWS\n\n```sh\npackyak deploy\n```\n\nOr via the AWS CDK CLI:\n```sh\npoetry run cdk deploy\n```\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/sam-goodwin/packyak"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "js": {
      "npm": "@packyak/aws-cdk"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "packyak-aws-cdk",
      "module": "packyak_aws_cdk"
    }
  },
  "types": {
    "@packyak/aws-cdk.AddHomeRequest": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.AddHomeRequest",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/workspace/workspace.ts",
        "line": 19
      },
      "name": "AddHomeRequest",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This should be a unique identifier.",
            "stability": "experimental",
            "summary": "The POSIX user ID for the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/workspace.ts",
            "line": 27
          },
          "name": "uid",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This should be unique across all users.",
            "stability": "experimental",
            "summary": "The username for the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/workspace.ts",
            "line": 23
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- same as the uid",
            "remarks": "This is used for file system permissions.",
            "stability": "experimental",
            "summary": "The POSIX group ID for the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/workspace.ts",
            "line": 33
          },
          "name": "gid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Secondary groups to assign to files written to this home directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/workspace.ts",
            "line": 37
          },
          "name": "secondaryGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.PosixGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/workspace/workspace:AddHomeRequest"
    },
    "@packyak/aws-cdk.AddUserProfileProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.AddUserProfileProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/sagemaker/domain.ts",
        "line": 544
      },
      "name": "AddUserProfileProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 545
          },
          "name": "executionRole",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        }
      ],
      "symbolId": "src/sagemaker/domain:AddUserProfileProps"
    },
    "@packyak/aws-cdk.AdjustmentType": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.AdjustmentType",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/emr/managed-scaling.ts",
        "line": 167
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The number of Amazon EC2 instances to add or remove each time the scaling activity is triggered."
          },
          "name": "CHANGE_IN_CAPACITY"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The percentage of the current instance group size to add or remove each time the scaling activity is triggered."
          },
          "name": "PERCENT_CHANGE_IN_CAPACITY"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The exact number of Amazon EC2 instances to add or remove each time the scaling activity is triggered."
          },
          "name": "EXACT_CAPACITY"
        }
      ],
      "name": "AdjustmentType",
      "symbolId": "src/emr/managed-scaling:AdjustmentType"
    },
    "@packyak/aws-cdk.AllocationStrategy": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/ManagementGuide/managed-scaling-allocation-strategy.html",
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.AllocationStrategy",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/emr/instance-fleet.ts",
        "line": 85
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "CAPACITY_OPTIMIZED"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "PRICE_CAPACITY_OPTIMIZED"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "DIVERSIFIED"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "LOWEST_PRICE"
        }
      ],
      "name": "AllocationStrategy",
      "symbolId": "src/emr/instance-fleet:AllocationStrategy"
    },
    "@packyak/aws-cdk.AppNetworkAccessType": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.AppNetworkAccessType",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/sagemaker/domain.ts",
        "line": 42
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "VPC_ONLY"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "PUBLIC_INTERNET_ONLY"
        }
      ],
      "name": "AppNetworkAccessType",
      "symbolId": "src/sagemaker/domain:AppNetworkAccessType"
    },
    "@packyak/aws-cdk.AuthMode": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.AuthMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/sagemaker/domain.ts",
        "line": 33
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "SSO"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "IAM"
        }
      ],
      "name": "AuthMode",
      "symbolId": "src/sagemaker/domain:AuthMode"
    },
    "@packyak/aws-cdk.AutoScalingPolicy": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.AutoScalingPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/managed-scaling.ts",
        "line": 60
      },
      "name": "AutoScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Automatic scaling activity will not cause an instance group to grow above or below these limits.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-autoscalingpolicy.html#cfn-emr-cluster-autoscalingpolicy-constraints",
            "stability": "experimental",
            "summary": "The upper and lower Amazon EC2 instance limits for an automatic scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 68
          },
          "name": "constraints",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "aws-cdk-lib.IResolvable"
                },
                {
                  "fqn": "@packyak/aws-cdk.ScalingConstraints"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-autoscalingpolicy.html#cfn-emr-cluster-autoscalingpolicy-rules",
            "stability": "experimental",
            "summary": "The scale-in and scale-out rules that comprise the automatic scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 74
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "aws-cdk-lib.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "aws-cdk-lib.IResolvable"
                          },
                          {
                            "fqn": "@packyak/aws-cdk.ScalingRule"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/emr/managed-scaling:AutoScalingPolicy"
    },
    "@packyak/aws-cdk.BaseClusterProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.BaseClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/cluster.ts",
        "line": 56
      },
      "name": "BaseClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The catalogs to use for the EMR cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 76
          },
          "name": "catalogs",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.ICatalog"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Name of the EMR Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 60
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC to deploy the EMR cluster into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 64
          },
          "name": "vpc",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- trust the `local` registry and all container registries in the account/region pair",
            "stability": "experimental",
            "summary": "Additional registries to allow privileged containers from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 162
          },
          "name": "additionalPrivilegedRegistries",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- trust the `local` registry and all container registries in the account/region pair",
            "stability": "experimental",
            "summary": "Additional registries to trust for Docker containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 156
          },
          "name": "additionalTrustedRegistries",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No bootstrap actions",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 98
          },
          "name": "bootstrapActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.BootstrapAction"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the {@link catalog }'s configurations + .venv for the user code.",
            "stability": "experimental",
            "summary": "Override EMR Configurations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 90
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.Configuration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Enable Docker support on the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 150
          },
          "name": "enableDocker",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-spark-rapids.html",
            "stability": "experimental",
            "summary": "Enable the Spark Rapids plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 137
          },
          "name": "enableSparkRapids",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- `true` if {@link enableSSMTunnelOverSSH } is also `true`, otherwise `false`",
            "stability": "experimental",
            "summary": "Installs and configures the SSM agent to run on all Primary, Core and Task nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 120
          },
          "name": "enableSSMAgent",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://docs.nvidia.com/spark-rapids/user-guide/latest/getting-started/aws-emr.html",
            "stability": "experimental",
            "summary": "Enable the XGBoost spark library."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 144
          },
          "name": "enableXGBoost",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Extra java options to include in the Spark context by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 114
          },
          "name": "extraJavaOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Mount a shared filesystem to the EMR cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 130
          },
          "name": "home",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.Workspace"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 68
          },
          "name": "idleTimeout",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Install the GitHub CLI on the EMR cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 126
          },
          "name": "installGitHubCLI",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No managed scaling policy",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 84
          },
          "name": "managedScalingPolicy",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.ManagedScalingPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- {@link ReleaseLabel.LATEST }",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 72
          },
          "name": "releaseLabel",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.ReleaseLabel"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{@link RemovalPolicy.DESTROY }",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 94
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- {@link ScaleDownBehavior.TERMINATE_AT_TASK_COMPLETION }",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 80
          },
          "name": "scaleDownBehavior",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.ScaleDownBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "experimental",
            "summary": "The concurrency level of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 110
          },
          "name": "stepConcurrencyLevel",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-spark-submit-step.html",
            "stability": "experimental",
            "summary": "The EMR Steps to submit to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 104
          },
          "name": "steps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.Step"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/emr/cluster:BaseClusterProps"
    },
    "@packyak/aws-cdk.BaseNessieCatalog": {
      "abstract": true,
      "assembly": "@packyak/aws-cdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.BaseNessieCatalog",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/nessie/base-nessie-catalog.ts",
          "line": 142
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@packyak/aws-cdk.BaseNessieRepoProps"
            }
          }
        ]
      },
      "interfaces": [
        "@packyak/aws-cdk.INessieCatalog"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/nessie/base-nessie-catalog.ts",
        "line": 87
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Bind this Catalog to a {@link Cluster} by granting any required IAM Policies and adding any required configurations to the Cluster."
          },
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 176
          },
          "name": "bind",
          "overrides": "@packyak/aws-cdk.ICatalog",
          "parameters": [
            {
              "name": "cluster",
              "type": {
                "fqn": "@packyak/aws-cdk.Cluster"
              }
            },
            {
              "name": "catalogName",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 171
          },
          "name": "configAsEnvVars",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "BaseNessieCatalog",
      "properties": [
        {
          "docs": {
            "deprecated": "use {@link apiV2Url } instead",
            "stability": "deprecated",
            "summary": "Endpoint for the Nessie API v1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 130
          },
          "name": "apiV1Url",
          "overrides": "@packyak/aws-cdk.INessieCatalog",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Note: Nessie CLI is not compatible with V1. For CLI use {@link apiV2Url}",
            "stability": "experimental",
            "summary": "Endpoint for the Nessie API v2."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 138
          },
          "name": "apiV2Url",
          "overrides": "@packyak/aws-cdk.INessieCatalog",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 94
          },
          "name": "catalogName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "This will translate to environment variables set at runtime.",
            "see": "https://projectnessie.org/try/configuration/#configuration",
            "stability": "experimental",
            "summary": "The {@link NessieConfig} for this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 102
          },
          "name": "config",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The default main branch of a Nessie repository created in this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 112
          },
          "name": "defaultMainBranch",
          "overrides": "@packyak/aws-cdk.INessieCatalog",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The URL to this Nessie service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 116
          },
          "name": "endpoint",
          "overrides": "@packyak/aws-cdk.INessieCatalog",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "https://projectnessie.org/develop/kernel/#high-level-abstract",
            "stability": "experimental",
            "summary": "The DynamoDB Table storing all."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 108
          },
          "name": "versionStore",
          "type": {
            "fqn": "@packyak/aws-cdk.DynamoDBNessieVersionStore"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The S3 bucket used as the warehouse for Nessie."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 120
          },
          "name": "warehouseBucket",
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The prefix to use for the warehouse path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 124
          },
          "name": "warehousePrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/nessie/base-nessie-catalog:BaseNessieCatalog"
    },
    "@packyak/aws-cdk.BaseNessieRepoProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.BaseNessieRepoProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/nessie/base-nessie-catalog.ts",
        "line": 46
      },
      "name": "BaseNessieRepoProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "spark_catalog - i.e. the default catalog",
            "stability": "experimental",
            "summary": "The name of this catalog in the Spark Context."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 52
          },
          "name": "catalogName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "main",
            "stability": "experimental",
            "summary": "The default main branch of a Nessie repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 68
          },
          "name": "defaultMainBranch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new log group is created for you",
            "stability": "experimental",
            "summary": "The log group to use for the Nessie service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 78
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_logs.ILogGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.DESTROY - dynamodb tables will be destroyed.",
            "stability": "experimental",
            "summary": "The removal policy to apply to the Nessie service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 84
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Properties for configuring the {@link DynamoDBNessieVersionStore}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 72
          },
          "name": "versionStore",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.DynamoDBNessieVersionStore"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- one is created for you",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 56
          },
          "name": "warehouseBucket",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no prefix (e.g. use the root: `s3://bucket/`)",
            "stability": "experimental",
            "summary": "The prefix to use for the warehouse path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 62
          },
          "name": "warehousePrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/nessie/base-nessie-catalog:BaseNessieRepoProps"
    },
    "@packyak/aws-cdk.BootstrapAction": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.BootstrapAction",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/bootstrap-action.ts",
        "line": 3
      },
      "name": "BootstrapAction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/bootstrap-action.ts",
            "line": 4
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/bootstrap-action.ts",
            "line": 5
          },
          "name": "script",
          "type": {
            "fqn": "aws-cdk-lib.aws_s3_assets.Asset"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/bootstrap-action.ts",
            "line": 6
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/emr/bootstrap-action:BootstrapAction"
    },
    "@packyak/aws-cdk.CloudWatchAlarmDefinition": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "remarks": "Scaling activity begins when you satisfy the defined alarm conditions.",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-cloudwatchalarmdefinition.html",
        "stability": "external",
        "summary": "`CloudWatchAlarmDefinition` is a subproperty of the `ScalingTrigger` property, which determines when to trigger an automatic scaling activity."
      },
      "fqn": "@packyak/aws-cdk.CloudWatchAlarmDefinition",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/managed-scaling.ts",
        "line": 246
      },
      "name": "CloudWatchAlarmDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-cloudwatchalarmdefinition.html#cfn-emr-cluster-cloudwatchalarmdefinition-comparisonoperator",
            "stability": "external",
            "summary": "Determines how the metric specified by `MetricName` is compared to the value specified by `Threshold` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 252
          },
          "name": "comparisonOperator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-cloudwatchalarmdefinition.html#cfn-emr-cluster-cloudwatchalarmdefinition-metricname",
            "stability": "external",
            "summary": "The name of the CloudWatch metric that is watched to determine an alarm condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 272
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "CloudWatch metrics for Amazon EMR are emitted every five minutes (300 seconds), so if you specify a CloudWatch metric, specify `300` .",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-cloudwatchalarmdefinition.html#cfn-emr-cluster-cloudwatchalarmdefinition-period",
            "stability": "external",
            "summary": "The period, in seconds, over which the statistic is applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 288
          },
          "name": "period",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-cloudwatchalarmdefinition.html#cfn-emr-cluster-cloudwatchalarmdefinition-threshold",
            "stability": "external",
            "summary": "The value against which the specified statistic is compared."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 302
          },
          "name": "threshold",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-cloudwatchalarmdefinition.html#cfn-emr-cluster-cloudwatchalarmdefinition-dimensions",
            "stability": "external",
            "summary": "A CloudWatch metric dimension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 258
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "aws-cdk-lib.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "aws-cdk-lib.IResolvable"
                          },
                          {
                            "fqn": "@packyak/aws-cdk.MetricDimension"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The default value is `1` .",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-cloudwatchalarmdefinition.html#cfn-emr-cluster-cloudwatchalarmdefinition-evaluationperiods",
            "stability": "external",
            "summary": "The number of periods, in five-minute increments, during which the alarm condition must exist before the alarm triggers automatic scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 266
          },
          "name": "evaluationPeriods",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The default is `AWS/ElasticMapReduce` .",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-cloudwatchalarmdefinition.html#cfn-emr-cluster-cloudwatchalarmdefinition-namespace",
            "stability": "external",
            "summary": "The namespace for the CloudWatch metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 280
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The default is `AVERAGE` .",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-cloudwatchalarmdefinition.html#cfn-emr-cluster-cloudwatchalarmdefinition-statistic",
            "stability": "external",
            "summary": "The statistic to apply to the metric associated with the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 296
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The value specified for `Unit` must correspond to the units specified in the CloudWatch metric.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-cloudwatchalarmdefinition.html#cfn-emr-cluster-cloudwatchalarmdefinition-unit",
            "stability": "external",
            "summary": "The unit of measure associated with the CloudWatch metric being watched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 310
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/emr/managed-scaling:CloudWatchAlarmDefinition"
    },
    "@packyak/aws-cdk.Cluster": {
      "assembly": "@packyak/aws-cdk",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "An EMR Cluster."
      },
      "fqn": "@packyak/aws-cdk.Cluster",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/emr/cluster.ts",
          "line": 250
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@packyak/aws-cdk.ClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "aws-cdk-lib.aws_iam.IGrantable",
        "aws-cdk-lib.aws_ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/emr/cluster.ts",
        "line": 225
      },
      "methods": [
        {
          "docs": {
            "remarks": "Bootstrap actions are scripts that run on the cluster before Hadoop starts.",
            "see": "https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-bootstrap.html",
            "stability": "experimental",
            "summary": "Add a Bootstrap Action to the cluster."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 712
          },
          "name": "addBootstrapAction",
          "parameters": [
            {
              "docs": {
                "summary": "the bootstrap action to add."
              },
              "name": "action",
              "type": {
                "fqn": "@packyak/aws-cdk.BootstrapAction"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "E.g. spark or hive configurations.",
            "stability": "experimental",
            "summary": "Add EMR Configurations to the cluster."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 700
          },
          "name": "addConfig",
          "parameters": [
            {
              "docs": {
                "summary": "additional configurations to add."
              },
              "name": "configurations",
              "type": {
                "fqn": "@packyak/aws-cdk.Configuration"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "This step will run when the cluster is started.",
            "stability": "experimental",
            "summary": "Add an EMR Step to the cluster."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 689
          },
          "name": "addStep",
          "parameters": [
            {
              "docs": {
                "summary": "the step to add."
              },
              "name": "step",
              "type": {
                "fqn": "@packyak/aws-cdk.Step"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allows connections to the Livy server on port 8998 from the specified {@link other} security group."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 1240
          },
          "name": "allowLivyFrom",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "aws-cdk-lib.aws_ec2.IConnectable"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Authorizes the EC2 instances to communicate with the SSM service.",
            "see": "https://aws.amazon.com/blogs/big-data/securing-access-to-emr-clusters-using-aws-systems-manager/",
            "stability": "experimental",
            "summary": "Installs the SSM Agent on Primary, Core, and Task nodes."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 973
          },
          "name": "enableSSMAgent"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/systems-manager/latest/userguide/getting-started-specify-session-document.html",
            "stability": "experimental",
            "summary": "Grant an permission to start an SSM Session on the EMR cluster."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 1201
          },
          "name": "grantStartSSMSession",
          "parameters": [
            {
              "docs": {
                "remarks": "// TODO: figure out how to use SSM Session Documents to:\n//       1. customize where state is store and encrypt it\n//       2. customize other session properties\n//       3. constrain access with IAM Condition: ssm:SessionDocumentAccessCheck",
                "summary": "the principal to grant the permission to."
              },
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Install the GitHub CLI on the EMR cluster."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 1032
          },
          "name": "installGitHubCLI"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Install the NVidia drivers on the EMR cluster."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 1010
          },
          "name": "installNvidiaContainerToolkit"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Install the NVidia drivers on the EMR cluster."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 1000
          },
          "name": "installNvidiaDrivers"
        },
        {
          "docs": {
            "example": "const sparkSQL = cluster.jdbc({\n port: 10000,\n});\nsparkSQL.allowFrom(sageMakerDomain);",
            "returns": "a reference to the JDBC server",
            "stability": "experimental",
            "summary": "Configure the EMR cluster start the Thrift Server and serve JDBC requests on the specified port."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 678
          },
          "name": "jdbc",
          "parameters": [
            {
              "docs": {
                "summary": "to set when running the JDBC server."
              },
              "name": "options",
              "type": {
                "fqn": "@packyak/aws-cdk.JdbcProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@packyak/aws-cdk.Jdbc"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mount a {@link Home} directory onto the File System."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 1048
          },
          "name": "mount",
          "parameters": [
            {
              "docs": {
                "summary": "the home directory to mount."
              },
              "name": "home",
              "type": {
                "fqn": "@packyak/aws-cdk.Home"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mount an EFS Access Point on the EMR cluster."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 1071
          },
          "name": "mountAccessPoint",
          "parameters": [
            {
              "docs": {
                "summary": "the EFS Access Point to mount."
              },
              "name": "accessPoint",
              "type": {
                "fqn": "aws-cdk-lib.aws_efs.IAccessPoint"
              }
            },
            {
              "docs": {
                "summary": "the options to use when mounting the Access Point."
              },
              "name": "options",
              "type": {
                "fqn": "@packyak/aws-cdk.MountFileSystemOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mount an EFS File System on the EMR cluster."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 1091
          },
          "name": "mountFileSystem",
          "parameters": [
            {
              "docs": {
                "summary": "the EFS File System to mount."
              },
              "name": "fileSystem",
              "type": {
                "fqn": "aws-cdk-lib.aws_efs.IFileSystem"
              }
            },
            {
              "docs": {
                "summary": "the options to use when mounting the File System."
              },
              "name": "options",
              "type": {
                "fqn": "@packyak/aws-cdk.MountFileSystemOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mounts YARN cgroups if not already mounted."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 985
          },
          "name": "mountYarnCGroups"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Setup Hadoop Users on the EMR cluster."
          },
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 1020
          },
          "name": "setupHadoopUsers"
        }
      ],
      "name": "Cluster",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The network connections associated with this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 230
          },
          "name": "connections",
          "overrides": "aws-cdk-lib.aws_ec2.IConnectable",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 228
          },
          "name": "coreSg",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 232
          },
          "name": "extraJavaOptions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 231
          },
          "name": "grantPrincipal",
          "overrides": "aws-cdk-lib.aws_iam.IGrantable",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 234
          },
          "name": "instanceProfile",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.InstanceProfile"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 233
          },
          "name": "jobFlowRole",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.Role"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 227
          },
          "name": "primarySg",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 226
          },
          "name": "release",
          "type": {
            "fqn": "@packyak/aws-cdk.ReleaseLabel"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 248
          },
          "name": "resource",
          "protected": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_emr.CfnCluster"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 229
          },
          "name": "serviceAccessSg",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 235
          },
          "name": "serviceRole",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.Role"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 246
          },
          "name": "taskInstanceFleets",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.InstanceFleet"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 245
          },
          "name": "taskInstanceGroups",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.InstanceGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/emr/cluster:Cluster"
    },
    "@packyak/aws-cdk.ClusterProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.ClusterProps",
      "interfaces": [
        "@packyak/aws-cdk.BaseClusterProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/cluster.ts",
        "line": 165
      },
      "name": "ClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html#cfn-emr-cluster-jobflowinstancesconfig-coreinstancefleet",
            "stability": "experimental",
            "summary": "Describes the EC2 instances and instance configurations for the core {@link InstanceFleet} when using {@link FleetCluster}s."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 193
          },
          "name": "coreInstanceFleet",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.InstanceFleet"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html#cfn-emr-cluster-jobflowinstancesconfig-coreinstancegroup",
            "stability": "experimental",
            "summary": "Describes the EC2 instances and instance configurations for core {@link InstanceGroup}s when using {@link UniformCluster}s."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 186
          },
          "name": "coreInstanceGroup",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.InstanceGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html#cfn-emr-cluster-jobflowinstancesconfig-masterinstancefleet",
            "stability": "experimental",
            "summary": "Describes the EC2 instances and instance configurations for the master {@link InstanceFleet} when using {@link FleetCluster}s."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 179
          },
          "name": "primaryInstanceFleet",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.InstanceFleet"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html#cfn-emr-cluster-jobflowinstancesconfig-masterinstancegroup",
            "stability": "experimental",
            "summary": "Describes the EC2 instances and instance configurations for the master {@link InstanceGroup} when using {@link UniformCluster}s."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 172
          },
          "name": "primaryInstanceGroup",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.PrimaryInstanceGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These task {@link InstanceFleet}s are added to the cluster as part of the cluster launch.\nEach task {@link InstanceFleet} must have a unique name specified so that CloudFormation\ncan differentiate between the task {@link InstanceFleet}s.\n\n> You can currently specify only one task instance fleet for a cluster. After creating the cluster, you can only modify the mutable properties of `InstanceFleetConfig` , which are `TargetOnDemandCapacity` and `TargetSpotCapacity` . Modifying any other property results in cluster replacement. > To allow a maximum of 30 Amazon EC2 instance types per fleet, include `TaskInstanceFleets` when you create your cluster. If you create your cluster without `TaskInstanceFleets` , Amazon EMR uses its default allocation strategy, which allows for a maximum of five Amazon EC2 instance types.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html#cfn-emr-cluster-jobflowinstancesconfig-taskinstancefleets",
            "stability": "experimental",
            "summary": "Describes the EC2 instances and instance configurations for the task {@link InstanceFleet}s when using {@link FleetCluster}s."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 219
          },
          "name": "taskInstanceFleets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.InstanceFleet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These task {@link InstanceGroup}s are added to the cluster as part of the cluster launch.\nEach task {@link InstanceGroup} must have a unique name specified so that CloudFormation\ncan differentiate between the task {@link InstanceGroup}s.\n\n> After creating the cluster, you can only modify the mutable properties of `InstanceGroupConfig` , which are `AutoScalingPolicy` and `InstanceCount` . Modifying any other property results in cluster replacement.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html#cfn-emr-cluster-jobflowinstancesconfig-taskinstancegroups",
            "stability": "experimental",
            "summary": "Describes the EC2 instances and instance configurations for task {@link InstanceGroup}s when using {@link UniformCluster}s."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/cluster.ts",
            "line": 206
          },
          "name": "taskInstanceGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.InstanceGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/emr/cluster:ClusterProps"
    },
    "@packyak/aws-cdk.ComputeLimits": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.ComputeLimits",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/managed-scaling.ts",
        "line": 14
      },
      "name": "ComputeLimits",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-computelimits.html#cfn-emr-cluster-computelimits-maximumcapacityunits",
            "stability": "experimental",
            "summary": "The upper boundary of Amazon EC2 units."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 22
          },
          "name": "maximumCapacityUnits",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-computelimits.html#cfn-emr-cluster-computelimits-minimumcapacityunits",
            "stability": "experimental",
            "summary": "The lower boundary of Amazon EC2 units."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 46
          },
          "name": "minimumCapacityUnits",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-computelimits.html#cfn-emr-cluster-computelimits-unittype",
            "stability": "experimental",
            "summary": "The unit type used for specifying a managed scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 52
          },
          "name": "unitType",
          "type": {
            "fqn": "@packyak/aws-cdk.ComputeUnit"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. The core units are not allowed to scale beyond this boundary. The parameter is used to split capacity allocation between core and task nodes.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-computelimits.html#cfn-emr-cluster-computelimits-maximumcorecapacityunits",
            "stability": "experimental",
            "summary": "The upper boundary of Amazon EC2 units for core node type in a cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 30
          },
          "name": "maximumCoreCapacityUnits",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. The On-Demand units are not allowed to scale beyond this boundary. The parameter is used to split capacity allocation between On-Demand and Spot Instances.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-computelimits.html#cfn-emr-cluster-computelimits-maximumondemandcapacityunits",
            "stability": "experimental",
            "summary": "The upper boundary of On-Demand Amazon EC2 units."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 38
          },
          "name": "maximumOnDemandCapacityUnits",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/emr/managed-scaling:ComputeLimits"
    },
    "@packyak/aws-cdk.ComputeUnit": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.ComputeUnit",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/emr/managed-scaling.ts",
        "line": 4
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "INSTANCES"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "INSTANCE_FLEET_UNITS"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "VCPU"
        }
      ],
      "name": "ComputeUnit",
      "symbolId": "src/emr/managed-scaling:ComputeUnit"
    },
    "@packyak/aws-cdk.Configuration": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.Configuration",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/configuration.ts",
        "line": 3
      },
      "name": "Configuration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/configuration.ts",
            "line": 4
          },
          "name": "classification",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/configuration.ts",
            "line": 5
          },
          "name": "configurationProperties",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/configuration.ts",
            "line": 6
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.Configuration"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/emr/configuration:Configuration"
    },
    "@packyak/aws-cdk.DNSConfiguration": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.DNSConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/dns-configuration.ts",
        "line": 4
      },
      "name": "DNSConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dns-configuration.ts",
            "line": 5
          },
          "name": "certificate",
          "type": {
            "fqn": "aws-cdk-lib.aws_certificatemanager.ICertificate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dns-configuration.ts",
            "line": 6
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dns-configuration.ts",
            "line": 7
          },
          "name": "hostedZone",
          "type": {
            "fqn": "aws-cdk-lib.aws_route53.IHostedZone"
          }
        }
      ],
      "symbolId": "src/dns-configuration:DNSConfiguration"
    },
    "@packyak/aws-cdk.DefaultUserSettings": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.DefaultUserSettings",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/sagemaker/domain.ts",
        "line": 47
      },
      "name": "DefaultUserSettings",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The execution role for the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 51
          },
          "name": "executionRole",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether users can access the Studio by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 57
          },
          "name": "studioWebPortal",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/sagemaker/domain:DefaultUserSettings"
    },
    "@packyak/aws-cdk.Domain": {
      "assembly": "@packyak/aws-cdk",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.Domain",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/sagemaker/domain.ts",
          "line": 128
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@packyak/aws-cdk.DomainProps"
            }
          }
        ]
      },
      "interfaces": [
        "aws-cdk-lib.aws_ec2.IConnectable",
        "aws-cdk-lib.aws_iam.IGrantable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/sagemaker/domain.ts",
        "line": 109
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 532
          },
          "name": "addUserProfile",
          "parameters": [
            {
              "name": "username",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@packyak/aws-cdk.AddUserProfileProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@packyak/aws-cdk.UserProfile"
            }
          }
        },
        {
          "docs": {
            "remarks": "Delete any running Apps (i.e. instances of a Space)\n2. Delete the Domain's spaces.\n2. Delete the Domain's EFS file system (first, by deleting any mounted access points, then the FS).",
            "stability": "experimental",
            "summary": "Creates a CustomResource that will clean up the domain prior to it being destroyed: 1."
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 288
          },
          "name": "enableCleanup",
          "parameters": [
            {
              "name": "removalPolicy",
              "type": {
                "fqn": "aws-cdk-lib.RemovalPolicy"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 434
          },
          "name": "grantCreateApp",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 441
          },
          "name": "grantCreatePresignedDomainUrl",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 448
          },
          "name": "grantCreateSpace",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 455
          },
          "name": "grantDeleteApp",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 462
          },
          "name": "grantDeleteSpace",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 469
          },
          "name": "grantDescribeApp",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 476
          },
          "name": "grantDescribeDomain",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 486
          },
          "name": "grantDescribeSpace",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 493
          },
          "name": "grantDescribeUserProfile",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grants access to list and describe clusters in the JupyterNotebook."
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 359
          },
          "name": "grantEMRClusterAccess",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 253
          },
          "name": "grantGlueInteractiveSession",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 384
          },
          "name": "grantListApps",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 391
          },
          "name": "grantListSessions",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 427
          },
          "name": "grantListSpaces",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 402
          },
          "name": "grantListTags",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 377
          },
          "name": "grantSageMakerSearch",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 416
          },
          "name": "grantSearchServiceCatalogProducts",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 338
          },
          "name": "grantStudioAccess",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 500
          },
          "name": "grantUpdateSpace",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        }
      ],
      "name": "Domain",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The network connections associated with this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 124
          },
          "name": "connections",
          "overrides": "aws-cdk-lib.aws_ec2.IConnectable",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 111
          },
          "name": "domainArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 110
          },
          "name": "domainId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 112
          },
          "name": "domainUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 126
          },
          "name": "grantPrincipal",
          "overrides": "aws-cdk-lib.aws_iam.IGrantable",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 114
          },
          "name": "homeEfsFileSystemArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 113
          },
          "name": "homeEfsFileSystemId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 118
          },
          "name": "resource",
          "protected": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_sagemaker.CfnDomain"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 122
          },
          "name": "sageMakerSg",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 116
          },
          "name": "singleSignOnApplicationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 115
          },
          "name": "singleSignOnManagedApplicationInstanceId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/sagemaker/domain:Domain"
    },
    "@packyak/aws-cdk.DomainProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.DomainProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/sagemaker/domain.ts",
        "line": 60
      },
      "name": "DomainProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-domainname",
            "stability": "experimental",
            "summary": "The name of the domain to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 72
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC where the Domain (and its resources) will be deployed to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 76
          },
          "name": "vpc",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AppNetworkAccessType.VpcOnly",
            "stability": "experimental",
            "summary": "Specifies the VPC used for non-EFS traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 88
          },
          "name": "appNetworkAccessType",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.AppNetworkAccessType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AuthMode.SSO",
            "stability": "experimental",
            "summary": "The authentication mode for the domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 66
          },
          "name": "authMode",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.AuthMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{@link SageMakerImage.CPU_V1 }",
            "stability": "experimental",
            "summary": "The default image for user profiles in the domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 98
          },
          "name": "defaultImage",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.SageMakerImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The default settings for user profiles in the domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 92
          },
          "name": "defaultUserSettings",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.DefaultUserSettings"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{@link RemovalPolicy.DESTROY }",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 102
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The security group for SageMaker to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 106
          },
          "name": "sageMakerSg",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SubnetSelection.PrimaryContainer",
            "stability": "experimental",
            "summary": "The subnets to deploy the Domain to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/domain.ts",
            "line": 82
          },
          "name": "subnetSelection",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "src/sagemaker/domain:DomainProps"
    },
    "@packyak/aws-cdk.DynamoDBNessieVersionStore": {
      "assembly": "@packyak/aws-cdk",
      "base": "constructs.Construct",
      "docs": {
        "see": "https://projectnessie.org/try/configuration/#dynamodb-version-store-settings",
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.DynamoDBNessieVersionStore",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/nessie/nessie-version-store.ts",
          "line": 29
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@packyak/aws-cdk.NessieVersionStoreProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/nessie/nessie-version-store.ts",
        "line": 25
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/nessie/nessie-version-store.ts",
            "line": 43
          },
          "name": "grantReadData",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/nessie/nessie-version-store.ts",
            "line": 53
          },
          "name": "grantReadWriteData",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/nessie/nessie-version-store.ts",
            "line": 48
          },
          "name": "grantWriteData",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        }
      ],
      "name": "DynamoDBNessieVersionStore",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-version-store.ts",
            "line": 27
          },
          "name": "objs",
          "type": {
            "fqn": "aws-cdk-lib.aws_dynamodb.Table"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-version-store.ts",
            "line": 26
          },
          "name": "refs",
          "type": {
            "fqn": "aws-cdk-lib.aws_dynamodb.Table"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-version-store.ts",
            "line": 28
          },
          "name": "tablePrefix",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/nessie/nessie-version-store:DynamoDBNessieVersionStore"
    },
    "@packyak/aws-cdk.EbsBlockDevice": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-storage.html",
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.EbsBlockDevice",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/block-device.ts",
        "line": 6
      },
      "name": "EbsBlockDevice",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This can be a number from 1 - 1024. If the volume type is EBS-optimized, the minimum value is 10.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-volumespecification.html#cfn-emr-cluster-volumespecification-sizeingb",
            "stability": "experimental",
            "summary": "The volume size, in gibibytes (GiB)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/block-device.ts",
            "line": 20
          },
          "name": "sizeInGb",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "standard",
            "remarks": "Volume types supported are:\n- gp3 ({@link EbsDeviceVolumeType.GENERAL_PURPOSE_SSD_GP3})\n- gp2 ({@link EbsDeviceVolumeType.GENERAL_PURPOSE_SSD})\n- io1 ({@link EbsDeviceVolumeType.PROVISIONED_IOPS_SSD})\n- st1 ({@link EbsDeviceVolumeType.THROUGHPUT_OPTIMIZED_HDD})\n- sc1 ({@link EbsDeviceVolumeType.COLD_HDD})\n- standard ({@link EbsDeviceVolumeType.STANDARD})",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-volumespecification.html#cfn-emr-cluster-volumespecification-volumetype",
            "stability": "experimental",
            "summary": "The volume type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/block-device.ts",
            "line": 44
          },
          "name": "volumeType",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.EbsDeviceVolumeType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-volumespecification.html#cfn-emr-cluster-volumespecification-iops",
            "stability": "experimental",
            "summary": "The number of I/O operations per second (IOPS) that the volume supports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/block-device.ts",
            "line": 12
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This optional parameter can be a number from `125` - `1000` and is valid\nonly for {@link EbsDeviceVolumeType.GENERAL_PURPOSE_SSD_GP3} volumes.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-volumespecification.html#cfn-emr-cluster-volumespecification-throughput",
            "stability": "experimental",
            "summary": "The throughput, in mebibyte per second (MiB/s)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/block-device.ts",
            "line": 29
          },
          "name": "throughput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "experimental",
            "summary": "The number of EBS volumes with a specific volume configuration to attach to each instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/block-device.ts",
            "line": 50
          },
          "name": "volumesPerInstance",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/emr/block-device:EbsBlockDevice"
    },
    "@packyak/aws-cdk.FleetCluster": {
      "assembly": "@packyak/aws-cdk",
      "base": "@packyak/aws-cdk.Cluster",
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/ManagementGuide/on-demand-capacity-reservations.html",
        "stability": "experimental",
        "summary": "An EMR Cluster that is comprised of {@link InstanceFleet}s."
      },
      "fqn": "@packyak/aws-cdk.FleetCluster",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/emr/fleet-cluster.ts",
          "line": 41
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@packyak/aws-cdk.FleetClusterProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/emr/fleet-cluster.ts",
        "line": 40
      },
      "name": "FleetCluster",
      "symbolId": "src/emr/fleet-cluster:FleetCluster"
    },
    "@packyak/aws-cdk.FleetClusterProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.FleetClusterProps",
      "interfaces": [
        "@packyak/aws-cdk.BaseClusterProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/fleet-cluster.ts",
        "line": 6
      },
      "name": "FleetClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html#cfn-emr-cluster-jobflowinstancesconfig-coreinstancefleet",
            "stability": "experimental",
            "summary": "Describes the EC2 instances and instance configurations for the core {@link InstanceFleet}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/fleet-cluster.ts",
            "line": 19
          },
          "name": "coreInstanceFleet",
          "type": {
            "fqn": "@packyak/aws-cdk.InstanceFleet"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html#cfn-emr-cluster-jobflowinstancesconfig-masterinstancefleet",
            "stability": "experimental",
            "summary": "Describes the EC2 instances and instance configurations for the primary {@link InstanceFleet} when using {@link FleetCluster}s."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/fleet-cluster.ts",
            "line": 13
          },
          "name": "primaryInstanceFleet",
          "type": {
            "fqn": "@packyak/aws-cdk.InstanceFleet"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These task {@link InstanceFleet}s are added to the cluster as part of the cluster launch.\nEach task {@link InstanceFleet} must have a unique name specified so that CloudFormation\ncan differentiate between the task {@link InstanceFleet}s.\n\n> You can currently specify only one task instance fleet for a cluster. After creating the cluster, you can only modify the mutable properties of `InstanceFleetConfig` , which are `TargetOnDemandCapacity` and `TargetSpotCapacity` . Modifying any other property results in cluster replacement. > To allow a maximum of 30 Amazon EC2 instance types per fleet, include `TaskInstanceFleets` when you create your cluster. If you create your cluster without `TaskInstanceFleets` , Amazon EMR uses its default allocation strategy, which allows for a maximum of five Amazon EC2 instance types.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html#cfn-emr-cluster-jobflowinstancesconfig-taskinstancefleets",
            "stability": "experimental",
            "summary": "Describes the EC2 instances and instance configurations for the task {@link InstanceFleet}s."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/fleet-cluster.ts",
            "line": 31
          },
          "name": "taskInstanceFleets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.InstanceFleet"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/emr/fleet-cluster:FleetClusterProps"
    },
    "@packyak/aws-cdk.FromBucketProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.FromBucketProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/glue-catalog.ts",
        "line": 24
      },
      "name": "FromBucketProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/glue-catalog.ts",
            "line": 25
          },
          "name": "warehouseBucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/glue-catalog.ts",
            "line": 26
          },
          "name": "warehousePrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/emr/glue-catalog:FromBucketProps"
    },
    "@packyak/aws-cdk.Home": {
      "assembly": "@packyak/aws-cdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "experimental",
        "summary": "A Home directory is a secure directory in a {@link Workspace} only accessible by the User who owns it."
      },
      "fqn": "@packyak/aws-cdk.Home",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/workspace/home.ts",
          "line": 65
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@packyak/aws-cdk.HomeProps"
            }
          }
        ]
      },
      "interfaces": [
        "aws-cdk-lib.aws_ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/workspace/home.ts",
        "line": 37
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 97
          },
          "name": "allowFrom",
          "parameters": [
            {
              "name": "connectable",
              "type": {
                "fqn": "aws-cdk-lib.aws_ec2.IConnectable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 124
          },
          "name": "grant",
          "parameters": [
            {
              "name": "__0",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            },
            {
              "name": "actions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 101
          },
          "name": "grantRead",
          "parameters": [
            {
              "name": "__0",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 114
          },
          "name": "grantReadWrite",
          "parameters": [
            {
              "name": "__0",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 119
          },
          "name": "grantRootAccess",
          "parameters": [
            {
              "name": "__0",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ]
        }
      ],
      "name": "Home",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "An {@link AccessPoint} to the user's home directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 45
          },
          "name": "accessPoint",
          "type": {
            "fqn": "aws-cdk-lib.aws_efs.AccessPoint"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The connections for the EFS file system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 41
          },
          "name": "connections",
          "overrides": "aws-cdk-lib.aws_ec2.IConnectable",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The POSIX group ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 59
          },
          "name": "gid",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Absolute path to the home directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 63
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The POSIX user ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 55
          },
          "name": "uid",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Should match the AWS SSO username.",
            "stability": "experimental",
            "summary": "The username of the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 51
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/workspace/home:Home"
    },
    "@packyak/aws-cdk.HomeProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.HomeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/workspace/home.ts",
        "line": 8
      },
      "name": "HomeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The file system associated with the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 12
          },
          "name": "fileSystem",
          "type": {
            "fqn": "aws-cdk-lib.aws_efs.FileSystem"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This should be a unique identifier.",
            "stability": "experimental",
            "summary": "The POSIX user ID for the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 20
          },
          "name": "uid",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This should be unique across all users.",
            "stability": "experimental",
            "summary": "The username for the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 16
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- same as the uid",
            "remarks": "This is used for file system permissions.",
            "stability": "experimental",
            "summary": "The POSIX group ID for the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 26
          },
          "name": "gid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Secondary groups to assign to files written to this home directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/home.ts",
            "line": 30
          },
          "name": "secondaryGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.PosixGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/workspace/home:HomeProps"
    },
    "@packyak/aws-cdk.IBindable": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.IBindable",
      "interfaces": [
        "aws-cdk-lib.aws_iam.IGrantable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/bind.ts",
        "line": 3
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/bind.ts",
            "line": 4
          },
          "name": "addEnvironment",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "IBindable",
      "symbolId": "src/bind:IBindable"
    },
    "@packyak/aws-cdk.ICatalog": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental",
        "summary": "A Table Catalog implementation provides."
      },
      "fqn": "@packyak/aws-cdk.ICatalog",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/catalog.ts",
        "line": 6
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Bind this Catalog to a {@link Cluster} by granting any required IAM Policies and adding any required configurations to the Cluster."
          },
          "locationInModule": {
            "filename": "src/emr/catalog.ts",
            "line": 14
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "the cluster to bind this catalog to."
              },
              "name": "cluster",
              "type": {
                "fqn": "@packyak/aws-cdk.Cluster"
              }
            },
            {
              "docs": {
                "summary": "the name to bind the catalog under."
              },
              "name": "catalogName",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "ICatalog",
      "symbolId": "src/emr/catalog:ICatalog"
    },
    "@packyak/aws-cdk.INessieCatalog": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.INessieCatalog",
      "interfaces": [
        "@packyak/aws-cdk.ICatalog"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/nessie/base-nessie-catalog.ts",
        "line": 15
      },
      "name": "INessieCatalog",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "deprecated": "This version of the API is deprecated and will be removed in future releases. Use {@link apiV2Url } instead.",
            "remarks": "This endpoint provides access to the version 1 of the Nessie API. It is recommended to use the v2 endpoint for the latest features and improvements.",
            "stability": "deprecated",
            "summary": "Endpoint for the Nessie API v1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 27
          },
          "name": "apiV1Url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This endpoint provides access to the version 2 of the Nessie API. It is the recommended endpoint to use for all interactions with the Nessie service.\n\nNote: The Nessie CLI is compatible only with this version of the API. For CLI interactions, ensure to use this endpoint.",
            "stability": "experimental",
            "summary": "Endpoint for the Nessie API v2."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 35
          },
          "name": "apiV2Url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "main",
            "remarks": "This property specifies the main branch that will be used by default for all operations within the Nessie service.",
            "stability": "experimental",
            "summary": "The default main branch of the Nessie repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 43
          },
          "name": "defaultMainBranch",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The Nessie service endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/base-nessie-catalog.ts",
            "line": 19
          },
          "name": "endpoint",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/nessie/base-nessie-catalog:INessieCatalog"
    },
    "@packyak/aws-cdk.IcebergGlueCatalog": {
      "assembly": "@packyak/aws-cdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.IcebergGlueCatalog",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/emr/glue-catalog.ts",
          "line": 48
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@packyak/aws-cdk.IcebergGlueCatalogProps"
            }
          }
        ]
      },
      "interfaces": [
        "@packyak/aws-cdk.ICatalog"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/emr/glue-catalog.ts",
        "line": 29
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/emr/glue-catalog.ts",
            "line": 33
          },
          "name": "fromBucketName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@packyak/aws-cdk.FromBucketProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@packyak/aws-cdk.IcebergGlueCatalog"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Bind this Catalog to a {@link Cluster} by granting any required IAM Policies and adding any required configurations to the Cluster."
          },
          "locationInModule": {
            "filename": "src/emr/glue-catalog.ts",
            "line": 55
          },
          "name": "bind",
          "overrides": "@packyak/aws-cdk.ICatalog",
          "parameters": [
            {
              "name": "cluster",
              "type": {
                "fqn": "@packyak/aws-cdk.Cluster"
              }
            },
            {
              "name": "catalogName",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "IcebergGlueCatalog",
      "symbolId": "src/emr/glue-catalog:IcebergGlueCatalog"
    },
    "@packyak/aws-cdk.IcebergGlueCatalogProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.IcebergGlueCatalogProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/glue-catalog.ts",
        "line": 9
      },
      "name": "IcebergGlueCatalogProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- one is created for you",
            "stability": "experimental",
            "summary": "The S3 bucket where the Iceberg table data is stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/glue-catalog.ts",
            "line": 15
          },
          "name": "warehouseBucket",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no prefix (e.g. use the root: `s3://bucket/`)",
            "stability": "experimental",
            "summary": "The prefix for the Iceberg table data in the S3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/glue-catalog.ts",
            "line": 21
          },
          "name": "warehousePrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/emr/glue-catalog:IcebergGlueCatalogProps"
    },
    "@packyak/aws-cdk.InstanceFleet": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.InstanceFleet",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/instance-fleet.ts",
        "line": 6
      },
      "name": "InstanceFleet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The instance types and their weights to use for the InstanceFleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 48
          },
          "name": "instanceTypes",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.InstanceTypeConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the InstanceFleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 10
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AllocationStrategy.LOWEST_PRICE",
            "stability": "experimental",
            "summary": "The allocation strategy to use when provisioning Spot Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 54
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.AllocationStrategy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "When the instance fleet launches, Amazon EMR\ntries to provision On-Demand instances as specified by {@link instanceTypes}.\n\nEach {@link InstanceTypeConfig} has a specified {@link InstanceTypeConfig.weightedCapacity}.\nWhen an On-Demand instance is provisioned, the {@link InstanceTypeConfig.weightedCapacity}\nunits count toward the target capacity.\n\nAmazon EMR provisions instances until the target capacity is totally fulfilled, even\nif this results in an overage. For example, if there are 2 units remaining to fulfill\ncapacity, and Amazon EMR can only provision an instance with a `WeightedCapacity` of 5\nunits, the instance is provisioned, and the target capacity is exceeded by 3 units.\n\n> If not specified or set to 0, only Spot instances are provisioned for the instance fleet\nusing `TargetSpotCapacity` . At least one of `TargetSpotCapacity` and `TargetOnDemandCapacity`\nshould be greater than 0. For a master instance fleet, only one of `TargetSpotCapacity` and\n`TargetOnDemandCapacity` can be specified, and its value must be 1.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancefleetconfig.html#cfn-emr-cluster-instancefleetconfig-targetondemandcapacity",
            "stability": "experimental",
            "summary": "The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 32
          },
          "name": "targetOnDemandCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "When the instance fleet launches, Amazon EMR tries to provision Spot instances as specified by\n{@link InstanceTypeConfig}. Each instance configuration has a specified `WeightedCapacity`. When a Spot instance is provisioned, the `WeightedCapacity` units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a `WeightedCapacity` of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units.\n\n> If not specified or set to 0, only On-Demand instances are provisioned for the instance fleet. At least one of `TargetSpotCapacity` and `TargetOnDemandCapacity` should be greater than 0. For a master instance fleet, only one of `TargetSpotCapacity` and `TargetOnDemandCapacity` can be specified, and its value must be 1.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancefleetconfig.html#cfn-emr-cluster-instancefleetconfig-targetspotcapacity",
            "stability": "experimental",
            "summary": "The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 44
          },
          "name": "targetSpotCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SWITCH_TO_ON_DEMAND",
            "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_SpotProvisioningSpecification.html",
            "stability": "experimental",
            "summary": "The action to take when provisioning a Cluster and Spot Instances are not available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 61
          },
          "name": "timeoutAction",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.TimeoutAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 1 hour",
            "remarks": "that is, when all Spot Instances\ncould not be provisioned within the Spot provisioning timeout. Valid\nvalues are {@link TimeoutAction.TERMINATE_CLUSTER} and {@link TimeoutAction.SWITCH_TO_ON_DEMAND}.\n\n{@link TimeoutAction.SWITCH_TO_ON_DEMAND} specifies that if no Spot Instances\nare available, On-Demand Instances should be provisioned to fulfill any\nremaining Spot capacity.\n\nThe minimum is `5` minutes and the maximum is `24` hours.",
            "see": "{@link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-spotprovisioningspecification.html#cfn-emr-cluster-spotprovisioningspecification-timeoutaction}",
            "stability": "experimental",
            "summary": "The action to take when TargetSpotCapacity has not been fulfilled when the TimeoutDurationMinutes has expired;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 77
          },
          "name": "timeoutDuration",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Duration"
          }
        }
      ],
      "symbolId": "src/emr/instance-fleet:InstanceFleet"
    },
    "@packyak/aws-cdk.InstanceGroup": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.InstanceGroup",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/instance-group.ts",
        "line": 18
      },
      "name": "InstanceGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-instancecount",
            "stability": "experimental",
            "summary": "Target number of instances for the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 24
          },
          "name": "instanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-instancetype",
            "stability": "experimental",
            "summary": "The Amazon EC2 instance type for all instances in the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 86
          },
          "name": "instanceType",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-name",
            "stability": "experimental",
            "summary": "Friendly name given to the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 33
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-autoscalingpolicy",
            "stability": "experimental",
            "summary": "`AutoScalingPolicy` is a subproperty of the [InstanceGroupConfig](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig.html) property type that specifies the constraints and rules of an automatic scaling policy in Amazon EMR . The automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. Only core and task instance groups can use automatic scaling policies. For more information, see [Using Automatic Scaling in Amazon EMR](https://docs.aws.amazon.com//emr/latest/ManagementGuide/emr-automatic-scaling.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 39
          },
          "name": "autoScalingPolicy",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.AutoScalingPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is the maximum price you are willing to pay for Spot Instances. Specify `OnDemandPrice` to set the amount equal to the On-Demand price, or specify an amount in USD.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-bidprice",
            "stability": "experimental",
            "summary": "If specified, indicates that the instance group uses Spot Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 47
          },
          "name": "bidPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The list of configurations supplied for an Amazon EMR cluster instance group. You can specify a separate configuration for each instance group (master, core, and task).",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-configurations",
            "stability": "experimental",
            "summary": "> Amazon EMR releases 4.x or later."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 55
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.Configuration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-customamiid",
            "stability": "experimental",
            "summary": "The custom AMI ID to use for the provisioned instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 61
          },
          "name": "customAmi",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IMachineImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No EBS block devices",
            "stability": "experimental",
            "summary": "EBS {@link EbsBlockDevice}s to attach to an instance in an {@link InstanceFleet }."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 67
          },
          "name": "ebsBlockDevices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.EbsBlockDevice"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This\noptimization provides the best performance for your EBS volumes by minimizing\ncontention between Amazon EBS I/O and other traffic from your instance.\n\n**Note**:\n> For Current Generation Instance types, EBS-optimization is enabled by default at no additional cost. For Previous Generation Instances types, EBS-optimization prices are on the Previous Generation Pricing Page.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html",
            "stability": "experimental",
            "summary": "An Amazon EBS–optimized instance uses an optimized configuration stack and provides additional, dedicated capacity for Amazon EBS I/O."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 80
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-market",
            "stability": "experimental",
            "summary": "Market type of the Amazon EC2 instances used to create a cluster node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 92
          },
          "name": "market",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.InstanceMarket"
          }
        }
      ],
      "symbolId": "src/emr/instance-group:InstanceGroup"
    },
    "@packyak/aws-cdk.InstanceMarket": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.InstanceMarket",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/emr/instance-market.ts",
        "line": 1
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "ON_DEMAND"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "SPOT"
        }
      ],
      "name": "InstanceMarket",
      "symbolId": "src/emr/instance-market:InstanceMarket"
    },
    "@packyak/aws-cdk.InstanceTypeConfig": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.InstanceTypeConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/instance-fleet.ts",
        "line": 109
      },
      "name": "InstanceTypeConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 110
          },
          "name": "instanceType",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancetypeconfig.html#cfn-emr-cluster-instancetypeconfig-bidprice",
            "stability": "experimental",
            "summary": "The bid price for each Amazon EC2 Spot Instance type as defined by {@link InstanceType} ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 133
          },
          "name": "bidPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancetypeconfig.html#cfn-emr-cluster-instancetypeconfig-bidpriceaspercentageofondemandprice",
            "stability": "experimental",
            "summary": "The bid price, as a percentage of On-Demand price, for each Amazon EC2 Spot Instance as defined by {@link InstanceType}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 140
          },
          "name": "bidPriceAsPercentageOfOnDemandPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Optional extra configurations to apply to the instances in the fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 163
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.Configuration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The default Amazon EMR AMI for the specified release label.",
            "stability": "experimental",
            "summary": "The custom AMI to use for the InstanceFleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 116
          },
          "name": "customAmi",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IMachineImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No EBS block devices",
            "stability": "experimental",
            "summary": "EBS {@link EbsBlockDevice}s to attach to an instance in an {@link InstanceFleet}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 146
          },
          "name": "ebsBlockDevices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.EbsBlockDevice"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This\noptimization provides the best performance for your EBS volumes by minimizing\ncontention between Amazon EBS I/O and other traffic from your instance.\n\n**Note**:\n> For Current Generation Instance types, EBS-optimization is enabled by default at no additional cost. For Previous Generation Instances types, EBS-optimization prices are on the Previous Generation Pricing Page.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html",
            "stability": "experimental",
            "summary": "An Amazon EBS–optimized instance uses an optimized configuration stack and provides additional, dedicated capacity for Amazon EBS I/O."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 159
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "This value is `1` for a master instance fleet, and must be 1 or greater for\ncore and task instance fleets. Defaults to 1 if not specified.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancetypeconfig.html#cfn-emr-cluster-instancetypeconfig-weightedcapacity",
            "stability": "experimental",
            "summary": "The number of units that a provisioned instance of this type provides toward fulfilling the target capacities defined in `InstanceFleetConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-fleet.ts",
            "line": 127
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/emr/instance-fleet:InstanceTypeConfig"
    },
    "@packyak/aws-cdk.Jdbc": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental",
        "summary": "Configures an EMR Cluster to start a Thrift Server daemon."
      },
      "fqn": "@packyak/aws-cdk.Jdbc",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/emr/jdbc.ts",
          "line": 37
        },
        "parameters": [
          {
            "name": "cluster",
            "type": {
              "fqn": "@packyak/aws-cdk.Cluster"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@packyak/aws-cdk.JdbcProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/emr/jdbc.ts",
        "line": 36
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/emr/jdbc.ts",
            "line": 87
          },
          "name": "allowFrom",
          "parameters": [
            {
              "name": "connectables",
              "type": {
                "fqn": "aws-cdk-lib.aws_ec2.IConnectable"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "Jdbc",
      "symbolId": "src/emr/jdbc:Jdbc"
    },
    "@packyak/aws-cdk.JdbcProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.JdbcProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/jdbc.ts",
        "line": 14
      },
      "name": "JdbcProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://spark.apache.org/docs/latest/sql-distributed-sql-engine.html",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/jdbc.ts",
            "line": 18
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/jdbc.ts",
            "line": 30
          },
          "name": "extraJavaOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/jdbc.ts",
            "line": 28
          },
          "name": "hiveConf",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Include tje .ivy2/jars directory so that the server will pick up extra extensions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/jdbc.ts",
            "line": 24
          },
          "name": "includeExtensions",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/jdbc.ts",
            "line": 29
          },
          "name": "sparkConf",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/emr/jdbc:JdbcProps"
    },
    "@packyak/aws-cdk.ManagedScalingPolicy": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.ManagedScalingPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/managed-scaling.ts",
        "line": 10
      },
      "name": "ManagedScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 11
          },
          "name": "computeLimits",
          "type": {
            "fqn": "@packyak/aws-cdk.ComputeLimits"
          }
        }
      ],
      "symbolId": "src/emr/managed-scaling:ManagedScalingPolicy"
    },
    "@packyak/aws-cdk.MetricDimension": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "remarks": "`MetricDimension` specifies a CloudWatch dimension, which is specified with a `Key` `Value` pair. The key is known as a `Name` in CloudWatch. By default, Amazon EMR uses one dimension whose `Key` is `JobFlowID` and `Value` is a variable representing the cluster ID, which is `${emr.clusterId}` . This enables the automatic scaling rule for EMR to bootstrap when the cluster ID becomes available during cluster creation.",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-metricdimension.html",
        "stability": "external",
        "summary": "`MetricDimension` is a subproperty of the `CloudWatchAlarmDefinition` property type."
      },
      "fqn": "@packyak/aws-cdk.MetricDimension",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/managed-scaling.ts",
        "line": 322
      },
      "name": "MetricDimension",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-metricdimension.html#cfn-emr-cluster-metricdimension-key",
            "stability": "external",
            "summary": "The dimension name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 328
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-metricdimension.html#cfn-emr-cluster-metricdimension-value",
            "stability": "external",
            "summary": "The dimension value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 334
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/emr/managed-scaling:MetricDimension"
    },
    "@packyak/aws-cdk.MountFileSystemOptions": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.MountFileSystemOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/workspace/workspace.ts",
        "line": 12
      },
      "name": "MountFileSystemOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/workspace.ts",
            "line": 16
          },
          "name": "gid",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/workspace.ts",
            "line": 13
          },
          "name": "mountPoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/workspace.ts",
            "line": 15
          },
          "name": "uid",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/workspace.ts",
            "line": 14
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/workspace/workspace:MountFileSystemOptions"
    },
    "@packyak/aws-cdk.NessieECSCatalog": {
      "assembly": "@packyak/aws-cdk",
      "base": "@packyak/aws-cdk.BaseNessieCatalog",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.NessieECSCatalog",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/nessie/nessie-ecs-catalog.ts",
          "line": 38
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@packyak/aws-cdk.NessieECSCatalogProps"
            }
          }
        ]
      },
      "interfaces": [
        "aws-cdk-lib.aws_iam.IGrantable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/nessie/nessie-ecs-catalog.ts",
        "line": 30
      },
      "name": "NessieECSCatalog",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The URL to this Nessie service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-ecs-catalog.ts",
            "line": 33
          },
          "name": "endpoint",
          "overrides": "@packyak/aws-cdk.BaseNessieCatalog",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-ecs-catalog.ts",
            "line": 35
          },
          "name": "grantPrincipal",
          "overrides": "aws-cdk-lib.aws_iam.IGrantable",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-ecs-catalog.ts",
            "line": 36
          },
          "name": "logGroup",
          "type": {
            "fqn": "aws-cdk-lib.aws_logs.ILogGroup"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-ecs-catalog.ts",
            "line": 31
          },
          "name": "service",
          "type": {
            "fqn": "aws-cdk-lib.aws_ecs_patterns.ApplicationLoadBalancedFargateService"
          }
        }
      ],
      "symbolId": "src/nessie/nessie-ecs-catalog:NessieECSCatalog"
    },
    "@packyak/aws-cdk.NessieECSCatalogProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.NessieECSCatalogProps",
      "interfaces": [
        "@packyak/aws-cdk.BaseNessieRepoProps",
        "aws-cdk-lib.aws_ecs_patterns.ApplicationLoadBalancedFargateServiceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/nessie/nessie-ecs-catalog.ts",
        "line": 23
      },
      "name": "NessieECSCatalogProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-ecs-catalog.ts",
            "line": 27
          },
          "name": "dns",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.DNSConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-ecs-catalog.ts",
            "line": 26
          },
          "name": "platform",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ecr_assets.Platform"
          }
        }
      ],
      "symbolId": "src/nessie/nessie-ecs-catalog:NessieECSCatalogProps"
    },
    "@packyak/aws-cdk.NessieLambdaCatalog": {
      "assembly": "@packyak/aws-cdk",
      "base": "@packyak/aws-cdk.BaseNessieCatalog",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.NessieLambdaCatalog",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/nessie/nessie-lambda-catalog.ts",
          "line": 22
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@packyak/aws-cdk.NessieLambdaCatalogProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/nessie/nessie-lambda-catalog.ts",
        "line": 16
      },
      "name": "NessieLambdaCatalog",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The URL to this Nessie service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-lambda-catalog.ts",
            "line": 20
          },
          "name": "endpoint",
          "overrides": "@packyak/aws-cdk.BaseNessieCatalog",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-lambda-catalog.ts",
            "line": 17
          },
          "name": "function",
          "type": {
            "fqn": "aws-cdk-lib.aws_lambda.Function"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-lambda-catalog.ts",
            "line": 18
          },
          "name": "functionUrl",
          "type": {
            "fqn": "aws-cdk-lib.aws_lambda.FunctionUrl"
          }
        }
      ],
      "symbolId": "src/nessie/nessie-lambda-catalog:NessieLambdaCatalog"
    },
    "@packyak/aws-cdk.NessieLambdaCatalogProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.NessieLambdaCatalogProps",
      "interfaces": [
        "@packyak/aws-cdk.BaseNessieRepoProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/nessie/nessie-lambda-catalog.ts",
        "line": 14
      },
      "name": "NessieLambdaCatalogProps",
      "symbolId": "src/nessie/nessie-lambda-catalog:NessieLambdaCatalogProps"
    },
    "@packyak/aws-cdk.NessieVersionStoreProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.NessieVersionStoreProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/nessie/nessie-version-store.ts",
        "line": 6
      },
      "name": "NessieVersionStoreProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- RemovalPolicy.DESTROY",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-version-store.ts",
            "line": 19
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- \"nessie\"",
            "remarks": "Nessie supports configuring a \"prefix\" that will be used to determine the names of these tables.",
            "see": "https://project-nessie.zulipchat.com/#narrow/stream/371187-general/topic/AWS.20Lambda.20with.20SnapStart/near/420329834",
            "stability": "experimental",
            "summary": "Nessie has two tables, `objs` and `refs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/nessie/nessie-version-store.ts",
            "line": 15
          },
          "name": "versionStoreName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/nessie/nessie-version-store:NessieVersionStoreProps"
    },
    "@packyak/aws-cdk.PosixGroup": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A statically defined POSIX Group."
      },
      "fqn": "@packyak/aws-cdk.PosixGroup",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/workspace/group.ts",
        "line": 4
      },
      "name": "PosixGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Unique ID of the POSIX group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/group.ts",
            "line": 12
          },
          "name": "gid",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Unique name of the POSIX group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/group.ts",
            "line": 8
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/workspace/group:PosixGroup"
    },
    "@packyak/aws-cdk.PrimaryInstanceGroup": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.PrimaryInstanceGroup",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/instance-group.ts",
        "line": 7
      },
      "name": "PrimaryInstanceGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-instancetype",
            "stability": "experimental",
            "summary": "The Amazon EC2 instance type for all instances in the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 86
          },
          "name": "instanceType",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-name",
            "stability": "experimental",
            "summary": "Friendly name given to the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 33
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-autoscalingpolicy",
            "stability": "experimental",
            "summary": "`AutoScalingPolicy` is a subproperty of the [InstanceGroupConfig](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig.html) property type that specifies the constraints and rules of an automatic scaling policy in Amazon EMR . The automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. Only core and task instance groups can use automatic scaling policies. For more information, see [Using Automatic Scaling in Amazon EMR](https://docs.aws.amazon.com//emr/latest/ManagementGuide/emr-automatic-scaling.html) ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 39
          },
          "name": "autoScalingPolicy",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.AutoScalingPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is the maximum price you are willing to pay for Spot Instances. Specify `OnDemandPrice` to set the amount equal to the On-Demand price, or specify an amount in USD.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-bidprice",
            "stability": "experimental",
            "summary": "If specified, indicates that the instance group uses Spot Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 47
          },
          "name": "bidPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The list of configurations supplied for an Amazon EMR cluster instance group. You can specify a separate configuration for each instance group (master, core, and task).",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-configurations",
            "stability": "experimental",
            "summary": "> Amazon EMR releases 4.x or later."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 55
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.Configuration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-customamiid",
            "stability": "experimental",
            "summary": "The custom AMI ID to use for the provisioned instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 61
          },
          "name": "customAmi",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IMachineImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No EBS block devices",
            "stability": "experimental",
            "summary": "EBS {@link EbsBlockDevice}s to attach to an instance in an {@link InstanceFleet }."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 67
          },
          "name": "ebsBlockDevices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.EbsBlockDevice"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This\noptimization provides the best performance for your EBS volumes by minimizing\ncontention between Amazon EBS I/O and other traffic from your instance.\n\n**Note**:\n> For Current Generation Instance types, EBS-optimization is enabled by default at no additional cost. For Previous Generation Instances types, EBS-optimization prices are on the Previous Generation Pricing Page.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html",
            "stability": "experimental",
            "summary": "An Amazon EBS–optimized instance uses an optimized configuration stack and provides additional, dedicated capacity for Amazon EBS I/O."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 80
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "TODO: I need to validate if there can be more than 1 primary instance group.",
            "stability": "experimental",
            "summary": "Number of instances in the Primary {@link InstanceGroup}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 15
          },
          "name": "instanceCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-instancegroupconfig.html#cfn-emr-cluster-instancegroupconfig-market",
            "stability": "experimental",
            "summary": "Market type of the Amazon EC2 instances used to create a cluster node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/instance-group.ts",
            "line": 92
          },
          "name": "market",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.InstanceMarket"
          }
        }
      ],
      "symbolId": "src/emr/instance-group:PrimaryInstanceGroup"
    },
    "@packyak/aws-cdk.PythonPoetryArgs": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.PythonPoetryArgs",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/python-poetry.ts",
        "line": 1
      },
      "name": "PythonPoetryArgs",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/python-poetry.ts",
            "line": 5
          },
          "name": "allExtras",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/python-poetry.ts",
            "line": 4
          },
          "name": "dev",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/python-poetry.ts",
            "line": 3
          },
          "name": "exclude",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/python-poetry.ts",
            "line": 2
          },
          "name": "include",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/python-poetry.ts",
            "line": 6
          },
          "name": "withoutHashes",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/python-poetry.ts",
            "line": 7
          },
          "name": "withoutUrls",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/python-poetry:PythonPoetryArgs"
    },
    "@packyak/aws-cdk.PythonVersion": {
      "assembly": "@packyak/aws-cdk",
      "base": "@packyak/aws-cdk.Version",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.PythonVersion",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/version.ts",
          "line": 2
        },
        "parameters": [
          {
            "name": "semverString",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/emr/python-version.ts",
        "line": 3
      },
      "name": "PythonVersion",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/python-version.ts",
            "line": 10
          },
          "name": "LATEST",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.PythonVersion"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/python-version.ts",
            "line": 7
          },
          "name": "V3_10",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.PythonVersion"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/python-version.ts",
            "line": 8
          },
          "name": "V3_11",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.PythonVersion"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/python-version.ts",
            "line": 9
          },
          "name": "V3_12",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.PythonVersion"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/python-version.ts",
            "line": 4
          },
          "name": "V3_7",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.PythonVersion"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/python-version.ts",
            "line": 5
          },
          "name": "V3_8",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.PythonVersion"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/python-version.ts",
            "line": 6
          },
          "name": "V3_9",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.PythonVersion"
          }
        }
      ],
      "symbolId": "src/emr/python-version:PythonVersion"
    },
    "@packyak/aws-cdk.ReleaseLabel": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.ReleaseLabel",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/emr/release-label.ts",
          "line": 21
        },
        "parameters": [
          {
            "name": "label",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "sparkVersion",
            "type": {
              "fqn": "@packyak/aws-cdk.SparkVersion"
            }
          },
          {
            "name": "pythonVersion",
            "type": {
              "fqn": "@packyak/aws-cdk.PythonVersion"
            }
          },
          {
            "name": "scalaVersion",
            "type": {
              "fqn": "@packyak/aws-cdk.ScalaVersion"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/emr/release-label.ts",
        "line": 5
      },
      "name": "ReleaseLabel",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/release-label.ts",
            "line": 18
          },
          "name": "EMR_6",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.ReleaseLabel"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/release-label.ts",
            "line": 12
          },
          "name": "EMR_6_15_0",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.ReleaseLabel"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/release-label.ts",
            "line": 6
          },
          "name": "EMR_7_0_0",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.ReleaseLabel"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/release-label.ts",
            "line": 19
          },
          "name": "LATEST",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.ReleaseLabel"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/release-label.ts",
            "line": 22
          },
          "name": "label",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/release-label.ts",
            "line": 28
          },
          "name": "majorVersion",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/release-label.ts",
            "line": 24
          },
          "name": "pythonVersion",
          "type": {
            "fqn": "@packyak/aws-cdk.PythonVersion"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/release-label.ts",
            "line": 25
          },
          "name": "scalaVersion",
          "type": {
            "fqn": "@packyak/aws-cdk.ScalaVersion"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/release-label.ts",
            "line": 23
          },
          "name": "sparkVersion",
          "type": {
            "fqn": "@packyak/aws-cdk.SparkVersion"
          }
        }
      ],
      "symbolId": "src/emr/release-label:ReleaseLabel"
    },
    "@packyak/aws-cdk.SageMakerImage": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.SageMakerImage",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/sagemaker/sage-maker-image.ts",
          "line": 85
        },
        "parameters": [
          {
            "name": "resourceId",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "imageType",
            "type": {
              "fqn": "@packyak/aws-cdk.SageMakerImageType"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/sagemaker/sage-maker-image.ts",
        "line": 67
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "src/sagemaker/sage-maker-image.ts",
            "line": 90
          },
          "name": "getArnForStack",
          "parameters": [
            {
              "name": "stack",
              "type": {
                "fqn": "aws-cdk-lib.Stack"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "SageMakerImage",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/sage-maker-image.ts",
            "line": 72
          },
          "name": "CPU_V0",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.SageMakerImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/sage-maker-image.ts",
            "line": 68
          },
          "name": "CPU_V1",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.SageMakerImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/sage-maker-image.ts",
            "line": 76
          },
          "name": "GPU_V0",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.SageMakerImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/sage-maker-image.ts",
            "line": 80
          },
          "name": "GPU_V1",
          "static": true,
          "type": {
            "fqn": "@packyak/aws-cdk.SageMakerImage"
          }
        }
      ],
      "symbolId": "src/sagemaker/sage-maker-image:SageMakerImage"
    },
    "@packyak/aws-cdk.SageMakerImageType": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.SageMakerImageType",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/sagemaker/sage-maker-image.ts",
        "line": 7
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "DISTRIBUTION"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "IMAGE"
        }
      ],
      "name": "SageMakerImageType",
      "symbolId": "src/sagemaker/sage-maker-image:SageMakerImageType"
    },
    "@packyak/aws-cdk.ScalaVersion": {
      "assembly": "@packyak/aws-cdk",
      "base": "@packyak/aws-cdk.Version",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.ScalaVersion",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/version.ts",
          "line": 2
        },
        "parameters": [
          {
            "name": "semverString",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/emr/scala-version.ts",
        "line": 3
      },
      "name": "ScalaVersion",
      "symbolId": "src/emr/scala-version:ScalaVersion"
    },
    "@packyak/aws-cdk.ScaleDownBehavior": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.ScaleDownBehavior",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/emr/managed-scaling.ts",
        "line": 55
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "TERMINATE_AT_INSTANCE_HOUR"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "TERMINATE_AT_TASK_COMPLETION"
        }
      ],
      "name": "ScaleDownBehavior",
      "symbolId": "src/emr/managed-scaling:ScaleDownBehavior"
    },
    "@packyak/aws-cdk.ScalingAction": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-scalingaction.html",
        "stability": "external",
        "summary": "`ScalingAction` determines the type of adjustment the automatic scaling activity makes when triggered, and the periodicity of the adjustment."
      },
      "fqn": "@packyak/aws-cdk.ScalingAction",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/managed-scaling.ts",
        "line": 150
      },
      "name": "ScalingAction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-scalingaction.html#cfn-emr-cluster-scalingaction-simplescalingpolicyconfiguration",
            "stability": "external",
            "summary": "The type of adjustment the automatic scaling activity makes when triggered, and the periodicity of the adjustment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 164
          },
          "name": "simpleScalingPolicyConfiguration",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "aws-cdk-lib.IResolvable"
                },
                {
                  "fqn": "@packyak/aws-cdk.SimpleScalingPolicy"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Instance groups use the market type specified for the group.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-scalingaction.html#cfn-emr-cluster-scalingaction-market",
            "stability": "external",
            "summary": "Not available for instance groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 158
          },
          "name": "market",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.InstanceMarket"
          }
        }
      ],
      "symbolId": "src/emr/managed-scaling:ScalingAction"
    },
    "@packyak/aws-cdk.ScalingConstraints": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "remarks": "`ScalingConstraints` defines the upper and lower EC2 instance limits for an automatic scaling policy. Automatic scaling activities triggered by automatic scaling rules will not cause an instance group to grow above or shrink below these limits.",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-scalingconstraints.html",
        "stability": "external",
        "summary": "`ScalingConstraints` is a subproperty of the `AutoScalingPolicy` property type."
      },
      "fqn": "@packyak/aws-cdk.ScalingConstraints",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/managed-scaling.ts",
        "line": 86
      },
      "name": "ScalingConstraints",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Scale-out activities will not add instances beyond this boundary.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-scalingconstraints.html#cfn-emr-cluster-scalingconstraints-maxcapacity",
            "stability": "external",
            "summary": "The upper boundary of Amazon EC2 instances in an instance group beyond which scaling activities are not allowed to grow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 94
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Scale-in activities will not terminate instances below this boundary.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-scalingconstraints.html#cfn-emr-cluster-scalingconstraints-mincapacity",
            "stability": "external",
            "summary": "The lower boundary of Amazon EC2 instances in an instance group below which scaling activities are not allowed to shrink."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 102
          },
          "name": "minCapacity",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/emr/managed-scaling:ScalingConstraints"
    },
    "@packyak/aws-cdk.ScalingRule": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "remarks": "`ScalingRule` defines the scale-in or scale-out rules for scaling activity, including the CloudWatch metric alarm that triggers activity, how EC2 instances are added or removed, and the periodicity of adjustments. The automatic scaling policy for an instance group can comprise one or more automatic scaling rules.",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-scalingrule.html",
        "stability": "external",
        "summary": "`ScalingRule` is a subproperty of the `AutoScalingPolicy` property type."
      },
      "fqn": "@packyak/aws-cdk.ScalingRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/managed-scaling.ts",
        "line": 114
      },
      "name": "ScalingRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-scalingrule.html#cfn-emr-cluster-scalingrule-action",
            "stability": "external",
            "summary": "The conditions that trigger an automatic scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 120
          },
          "name": "action",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "aws-cdk-lib.IResolvable"
                },
                {
                  "fqn": "@packyak/aws-cdk.ScalingAction"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Rule names must be unique within a scaling policy.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-scalingrule.html#cfn-emr-cluster-scalingrule-name",
            "stability": "external",
            "summary": "The name used to identify an automatic scaling rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 134
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-scalingrule.html#cfn-emr-cluster-scalingrule-trigger",
            "stability": "external",
            "summary": "The CloudWatch alarm definition that determines when automatic scaling activity is triggered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 140
          },
          "name": "trigger",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "aws-cdk-lib.IResolvable"
                },
                {
                  "fqn": "@packyak/aws-cdk.ScalingTrigger"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-scalingrule.html#cfn-emr-cluster-scalingrule-description",
            "stability": "external",
            "summary": "A friendly, more verbose description of the automatic scaling rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 126
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/emr/managed-scaling:ScalingRule"
    },
    "@packyak/aws-cdk.ScalingTrigger": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "remarks": "`ScalingTrigger` determines the conditions that trigger an automatic scaling activity.",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-scalingtrigger.html",
        "stability": "external",
        "summary": "`ScalingTrigger` is a subproperty of the `ScalingRule` property type."
      },
      "fqn": "@packyak/aws-cdk.ScalingTrigger",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/managed-scaling.ts",
        "line": 226
      },
      "name": "ScalingTrigger",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "When the defined alarm conditions are met along with other trigger parameters, scaling activity begins.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-scalingtrigger.html#cfn-emr-cluster-scalingtrigger-cloudwatchalarmdefinition",
            "stability": "external",
            "summary": "The definition of a CloudWatch metric alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 234
          },
          "name": "cloudWatchAlarmDefinition",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "aws-cdk-lib.IResolvable"
                },
                {
                  "fqn": "@packyak/aws-cdk.CloudWatchAlarmDefinition"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/emr/managed-scaling:ScalingTrigger"
    },
    "@packyak/aws-cdk.SimpleScalingPolicy": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "remarks": "`SimpleScalingPolicyConfiguration` determines how an automatic scaling action adds or removes instances, the cooldown period, and the number of EC2 instances that are added each time the CloudWatch metric alarm condition is satisfied.",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-simplescalingpolicyconfiguration.html",
        "stability": "external",
        "summary": "`SimpleScalingPolicyConfiguration` is a subproperty of the `ScalingAction` property type."
      },
      "fqn": "@packyak/aws-cdk.SimpleScalingPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/managed-scaling.ts",
        "line": 191
      },
      "name": "SimpleScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "A positive value adds to the instance group's Amazon EC2 instance count while a negative number removes instances. If `AdjustmentType` is set to `EXACT_CAPACITY` , the number should only be a positive integer. If `AdjustmentType` is set to `PERCENT_CHANGE_IN_CAPACITY` , the value should express the percentage as an integer. For example, -20 indicates a decrease in 20% increments of cluster capacity.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-simplescalingpolicyconfiguration.html#cfn-emr-cluster-simplescalingpolicyconfiguration-scalingadjustment",
            "stability": "external",
            "summary": "The amount by which to scale in or scale out, based on the specified `AdjustmentType` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 214
          },
          "name": "scalingAdjustment",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AdjustmentType.CHANGE_IN_CAPACITY",
            "remarks": "`CHANGE_IN_CAPACITY` indicates that the Amazon EC2 instance count increments or decrements by `ScalingAdjustment` , which should be expressed as an integer. `PERCENT_CHANGE_IN_CAPACITY` indicates the instance count increments or decrements by the percentage specified by `ScalingAdjustment` , which should be expressed as an integer. For example, 20 indicates an increase in 20% increments of cluster capacity. `EXACT_CAPACITY` indicates the scaling activity results in an instance group with the number of Amazon EC2 instances specified by `ScalingAdjustment` , which should be expressed as a positive integer.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-simplescalingpolicyconfiguration.html#cfn-emr-cluster-simplescalingpolicyconfiguration-adjustmenttype",
            "stability": "external",
            "summary": "The way in which Amazon EC2 instances are added (if `ScalingAdjustment` is a positive number) or terminated (if `ScalingAdjustment` is a negative number) each time the scaling activity is triggered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 200
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.AdjustmentType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-simplescalingpolicyconfiguration.html#cfn-emr-cluster-simplescalingpolicyconfiguration-cooldown",
            "stability": "external",
            "summary": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/managed-scaling.ts",
            "line": 206
          },
          "name": "coolDown",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/emr/managed-scaling:SimpleScalingPolicy"
    },
    "@packyak/aws-cdk.SparkVersion": {
      "assembly": "@packyak/aws-cdk",
      "base": "@packyak/aws-cdk.Version",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.SparkVersion",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/version.ts",
          "line": 2
        },
        "parameters": [
          {
            "name": "semverString",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/emr/spark-version.ts",
        "line": 3
      },
      "name": "SparkVersion",
      "symbolId": "src/emr/spark-version:SparkVersion"
    },
    "@packyak/aws-cdk.Step": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.Step",
      "interfaces": [
        "aws-cdk-lib.aws_emr.CfnCluster.StepConfigProperty"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/step.ts",
        "line": 3
      },
      "name": "Step",
      "symbolId": "src/emr/step:Step"
    },
    "@packyak/aws-cdk.StreamlitSite": {
      "assembly": "@packyak/aws-cdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.StreamlitSite",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/streamlit-site.ts",
          "line": 62
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@packyak/aws-cdk.StreamlitSiteProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/streamlit-site.ts",
        "line": 58
      },
      "name": "StreamlitSite",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/streamlit-site.ts",
            "line": 59
          },
          "name": "service",
          "type": {
            "fqn": "aws-cdk-lib.aws_ecs_patterns.ApplicationLoadBalancedFargateService"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/streamlit-site.ts",
            "line": 60
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/streamlit-site:StreamlitSite"
    },
    "@packyak/aws-cdk.StreamlitSiteProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.StreamlitSiteProps",
      "interfaces": [
        "aws-cdk-lib.aws_ecs_patterns.ApplicationLoadBalancedFargateServiceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/streamlit-site.ts",
        "line": 19
      },
      "name": "StreamlitSiteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "example": "\"my/app.py\"",
            "stability": "experimental",
            "summary": "Entrypoint to the streamlit application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/streamlit-site.ts",
            "line": 30
          },
          "name": "home",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"Dockerfile\"",
            "stability": "experimental",
            "summary": "The name of the Dockerfile to use to build this Streamlit site."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/streamlit-site.ts",
            "line": 36
          },
          "name": "dockerfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "/_stcore/health",
            "see": "https://docs.streamlit.io/knowledge-base/tutorials/deploy/docker",
            "stability": "experimental",
            "summary": "Override the {@link HealthCheck} for this Streamlit site."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/streamlit-site.ts",
            "line": 49
          },
          "name": "healthCheck",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.HealthCheck"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{@link Platform.LINUX_AMD64 }",
            "stability": "experimental",
            "summary": "The platform to use to build this Streamlit site."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/streamlit-site.ts",
            "line": 42
          },
          "name": "platform",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ecr_assets.Platform"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- see {@link exportRequirementsSync }",
            "stability": "experimental",
            "summary": "Override how the `requirements.txt` file is generated with Python Poetry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/streamlit-site.ts",
            "line": 55
          },
          "name": "pythonPoetryArgs",
          "optional": true,
          "type": {
            "fqn": "@packyak/aws-cdk.PythonPoetryArgs"
          }
        }
      ],
      "symbolId": "src/streamlit-site:StreamlitSiteProps"
    },
    "@packyak/aws-cdk.TimeoutAction": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_SpotProvisioningSpecification.html",
        "stability": "experimental",
        "summary": "Action to take when provisioning a Cluster and Spot Instances are not available."
      },
      "fqn": "@packyak/aws-cdk.TimeoutAction",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/emr/instance-fleet.ts",
        "line": 97
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Specifies that if no Spot Instances are available, On-Demand Instances should be provisioned to fulfill any remaining Spot capacity."
          },
          "name": "SWITCH_TO_ON_DEMAND"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Terminates the Cluster if Spot Instances are not available."
          },
          "name": "TERMINATE_CLUSTER"
        }
      ],
      "name": "TimeoutAction",
      "symbolId": "src/emr/instance-fleet:TimeoutAction"
    },
    "@packyak/aws-cdk.TransportMode": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental",
        "summary": "https://mr3docs.datamonad.com/docs/k8s/advanced/transport/."
      },
      "fqn": "@packyak/aws-cdk.TransportMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/emr/jdbc.ts",
        "line": 8
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "BINARY"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "HTTP"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "ALL"
        }
      ],
      "name": "TransportMode",
      "symbolId": "src/emr/jdbc:TransportMode"
    },
    "@packyak/aws-cdk.UniformCluster": {
      "assembly": "@packyak/aws-cdk",
      "base": "@packyak/aws-cdk.Cluster",
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-instances-guidelines.html",
        "stability": "experimental",
        "summary": "Creates an EMR Cluster that is comprised of {@link InstanceGroup}s."
      },
      "fqn": "@packyak/aws-cdk.UniformCluster",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/emr/uniform-cluster.ts",
          "line": 41
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@packyak/aws-cdk.UniformClusterProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/emr/uniform-cluster.ts",
        "line": 40
      },
      "name": "UniformCluster",
      "symbolId": "src/emr/uniform-cluster:UniformCluster"
    },
    "@packyak/aws-cdk.UniformClusterProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.UniformClusterProps",
      "interfaces": [
        "@packyak/aws-cdk.BaseClusterProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/emr/uniform-cluster.ts",
        "line": 6
      },
      "name": "UniformClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html#cfn-emr-cluster-jobflowinstancesconfig-coreinstancegroup",
            "stability": "experimental",
            "summary": "Describes the EC2 instances and instance configurations for core {@link InstanceGroup}s."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/uniform-cluster.ts",
            "line": 18
          },
          "name": "coreInstanceGroup",
          "type": {
            "fqn": "@packyak/aws-cdk.InstanceGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html#cfn-emr-cluster-jobflowinstancesconfig-masterinstancegroup",
            "stability": "experimental",
            "summary": "Describes the EC2 instances and instance configurations for the primary {@link InstanceGroup}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/uniform-cluster.ts",
            "line": 12
          },
          "name": "primaryInstanceGroup",
          "type": {
            "fqn": "@packyak/aws-cdk.PrimaryInstanceGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "These task {@link InstanceGroup}s are added to the cluster as part of the cluster launch.\nEach task {@link InstanceGroup} must have a unique name specified so that CloudFormation\ncan differentiate between the task {@link InstanceGroup}s.\n\n> After creating the cluster, you can only modify the mutable properties of `InstanceGroupConfig` , which are `AutoScalingPolicy` and `InstanceCount` . Modifying any other property results in cluster replacement.",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html#cfn-emr-cluster-jobflowinstancesconfig-taskinstancegroups",
            "stability": "experimental",
            "summary": "Describes the EC2 instances and instance configurations for task {@link InstanceGroup}s."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/emr/uniform-cluster.ts",
            "line": 30
          },
          "name": "taskInstanceGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@packyak/aws-cdk.InstanceGroup"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/emr/uniform-cluster:UniformClusterProps"
    },
    "@packyak/aws-cdk.UserProfile": {
      "assembly": "@packyak/aws-cdk",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.UserProfile",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/sagemaker/user-profile.ts",
          "line": 15
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@packyak/aws-cdk.UserProfileProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/sagemaker/user-profile.ts",
        "line": 13
      },
      "name": "UserProfile",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/user-profile.ts",
            "line": 14
          },
          "name": "resource",
          "protected": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_sagemaker.CfnUserProfile"
          }
        }
      ],
      "symbolId": "src/sagemaker/user-profile:UserProfile"
    },
    "@packyak/aws-cdk.UserProfileProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.UserProfileProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/sagemaker/user-profile.ts",
        "line": 7
      },
      "name": "UserProfileProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/user-profile.ts",
            "line": 8
          },
          "name": "domain",
          "type": {
            "fqn": "@packyak/aws-cdk.Domain"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/user-profile.ts",
            "line": 9
          },
          "name": "userProfileName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/sagemaker/user-profile.ts",
            "line": 10
          },
          "name": "executionRole",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        }
      ],
      "symbolId": "src/sagemaker/user-profile:UserProfileProps"
    },
    "@packyak/aws-cdk.Version": {
      "assembly": "@packyak/aws-cdk",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.Version",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/version.ts",
          "line": 2
        },
        "parameters": [
          {
            "name": "semverString",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/version.ts",
        "line": 1
      },
      "name": "Version",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/version.ts",
            "line": 4
          },
          "name": "majorMinorVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/version.ts",
            "line": 2
          },
          "name": "semverString",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/version:Version"
    },
    "@packyak/aws-cdk.Workspace": {
      "assembly": "@packyak/aws-cdk",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "A Workspace contains a shared EFS {@link FileSystem} with {@link AccessPoint }s\nfor each {@link User } granted access to the system.\n\nA Workspace can be mounted to EC2 machines, SageMaker Domains and AWS EMR Clusters.",
        "stability": "experimental",
        "summary": "A Workspace is a shared environment for a team of developers to work on a project together."
      },
      "fqn": "@packyak/aws-cdk.Workspace",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/workspace/workspace.ts",
          "line": 69
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@packyak/aws-cdk.WorkspaceProps"
            }
          }
        ]
      },
      "interfaces": [
        "aws-cdk-lib.aws_ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/workspace/workspace.ts",
        "line": 50
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add a home directory to the workspace."
          },
          "locationInModule": {
            "filename": "src/workspace/workspace.ts",
            "line": 107
          },
          "name": "addHome",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@packyak/aws-cdk.AddHomeRequest"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@packyak/aws-cdk.Home"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allow access to the EFS file system from a connectable, e.g. SecurityGroup."
          },
          "locationInModule": {
            "filename": "src/workspace/workspace.ts",
            "line": 100
          },
          "name": "allowFrom",
          "parameters": [
            {
              "docs": {
                "summary": "the connectable to allow access to the shared EFS file system."
              },
              "name": "connectable",
              "type": {
                "fqn": "aws-cdk-lib.aws_ec2.IConnectable"
              }
            }
          ]
        }
      ],
      "name": "Workspace",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Connections for the EFS file system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/workspace.ts",
            "line": 64
          },
          "name": "connections",
          "overrides": "aws-cdk-lib.aws_ec2.IConnectable",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "EFS File System shared by all users of the Workspace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/workspace.ts",
            "line": 54
          },
          "name": "fileSystem",
          "type": {
            "fqn": "aws-cdk-lib.aws_efs.FileSystem"
          }
        },
        {
          "docs": {
            "remarks": "This is the default user assigned when logging into a machine via SSM.",
            "stability": "experimental",
            "summary": "Home directory of the `ssm-user` POSIX user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workspace/workspace.ts",
            "line": 60
          },
          "name": "ssm",
          "type": {
            "fqn": "@packyak/aws-cdk.Home"
          }
        }
      ],
      "symbolId": "src/workspace/workspace:Workspace"
    },
    "@packyak/aws-cdk.WorkspaceProps": {
      "assembly": "@packyak/aws-cdk",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@packyak/aws-cdk.WorkspaceProps",
      "interfaces": [
        "aws-cdk-lib.aws_efs.FileSystemProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/workspace/workspace.ts",
        "line": 40
      },
      "name": "WorkspaceProps",
      "symbolId": "src/workspace/workspace:WorkspaceProps"
    }
  },
  "version": "0.4.17",
  "fingerprint": "YnKu0mbvoHJL/1bqLop044A2ux0dOLEjk7BlHjY5U1s="
}